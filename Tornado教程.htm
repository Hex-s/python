<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>Tornado Web 服务器概览 - tornado教程</title>
<style type="text/css">
	body {
	background:white;
	color:black;
	font-family:Georgia, serif;
	font-size:11pt;
	margin-top: 25px;
	margin-bottom: 25px;
	overflow-x:hidden;
}
h1, h2, h3, h4 {
	font-family: Calibri, sans-serif;
	margin: 0;
}
img {
	border: 0;
}
pre, code {
	color: #060;
}
a, a code {
	color: #216093;
}
table {
	border-collapse: collapse;
	border: 0;
}
td {
	border: 0;
	padding: 0;
}
#body {
	display:relative;
	margin:auto;
/*	margin-left:300px;*/
	max-width: 850px;
}
#header {
	margin-bottom: 15px;
}
#content p, #content li, #footer {
	line-height: 16pt;
}
#content pre {
	line-height: 14pt;
	margin: 17pt;
	padding-left: 1em;
	border-left: 1px solid #ccc;
}
#footer {
	margin-top: 1em;
}
#header .logo {
	line-height: 0;
	padding-bottom: 5px;
	padding-right: 15px;
}
#header .logo img {
	width: 286px;
	height: 72px;
}
#headerlogo {
	display:block;
	background:url(tornado.png) no-repeat;
	text-indent:-5000px;
	height:72px;
	width:286px;
}
#header .title {
	vertical-align: bottom;
}
#header .title h1 {
	font-size: 25px;
	font-weight: normal;
}
#header .title h1, #header .title h1 a {
	color: #666;
}
#content h1, #content h2, #content h3 {
	color: #4d8cbf;
	margin-bottom: 2pt;
	margin-top: 17pt;
}
#content h2 {
	font-size: 19pt;
}
#content h3 {
	font-size: 15pt;
}
#content p {
	margin: 0;
	margin-bottom: 1em;
}
#content .toc{
	position:fixed;
	margin-left:-320px;
/*	margin-top:-100px;*/
}
.toc a{
	text-decoration:none;
}
.toc a:hover{
	text-decoration:none;
	font-weight:bold;
}
</style>

</head>
<body>
<div id="body">
  <div id="header">
    <table>
      <tbody>
        <tr>
          <td class="logo"><span id="headerlogo">Tornado Web服务器概览,tornado教程,tornado开发教程</span></td>
          <td class="title"><h1>概览</h1>
            <small><a href="http://sebug.net/vuldb/">漏洞</a> | <a href="http://sebug.net/appdir/">漏洞目录</a> | <a href="http://sebug.net/paper/">安全文档</a></small></td>
        </tr>
      </tbody>
    </table>
  </div>
  <div id="content">
    <div class="toc">
      <ul>
        <li><a href="#overview">Overview</a></li>
        <li><a href="#download">下载和安装</a></li>
        <li><a href="#_1">模块索引</a>
          <ul>
            <li><a href="#_2">主要模块</a></li>
            <li><a href="#_3">底层模块</a></li>
          </ul>
        </li>
        <li><a href="#tornado">Tornado 攻略</a>
          <ul>
            <li><a href="#_4">请求处理程序和请求参数</a></li>
            <li><a href="#requesthandler">重写 RequestHandler 的方法函数</a></li>
            <li><a href="#redirect">重定向(redirect)</a></li>
            <li><a href="#_5">模板</a></li>
            <li><a href="#cookie-cookie">Cookie 和安全 Cookie</a></li>
            <li><a href="#_6">用户认证</a></li>
            <li><a href="#_7">跨站伪造请求的防范</a></li>
            <li><a href="#_8">静态文件和主动式文件缓存</a></li>
            <li><a href="#_9">本地化</a></li>
            <li><a href="#ui">UI 模块</a></li>
            <li><a href="#_10">非阻塞式异步请求</a></li>
            <li><a href="#http">异步 HTTP 客户端</a></li>
            <li><a href="#_11">第三方认证</a></li>
            <li><a href="#_12">调试模式和自动重载</a></li>
          </ul>
        </li>
        <li><a href="#_13">性能</a></li>
        <li><a href="#_14">生产环境下的部署</a></li>
        <li><a href="#wsgi-google-appengine">WSGI 和 Google AppEngine</a></li>
        <li><a href="#_15">注意事项和社区支持</a></li>
      </ul>
    </div>
    <h2 id="overview">Overview</h2>
    <p><a href="http://friendfeed.com/" rel="nofollow">FriendFeed</a>使用了一款使用 Python 编写的，相对简单的
      非阻塞式 Web 服务器。其应用程序使用的 Web 框架看起来有些像 <a href="http://webpy.org/" rel="nofollow">web.py</a> 或者 Google 的 <a href="http://code.google.com/appengine/docs/python/tools/webapp/" rel="nofollow">webapp</a>，
      不过为了能有效利用非阻塞式服务器环境，这个 Web 框架还包含了一些相关的有用工具
      和优化。</p>
    <p><a href="http://sebug.net/paper/books/tornado/">Tornado</a> 就是我们在 FriendFeed 的 Web 
      服务器及其常用工具的开源版本。Tornado 和现在的主流 Web 服务器框架（包括大多数 
      Python 的框架）有着明显的区别：它是非阻塞式服务器，而且速度相当快。得利于其
      非阻塞的方式和对 <a href="http://www.kernel.org/doc/man-pages/online/pages/man4/epoll.4.html">epoll</a> 的运用，Tornado 每秒可以处理数以千计的连接，因此 Tornado 是实时 Web 服务的一个
      理想框架。我们开发这个 Web 服务器的主要目的就是为了处理 FriendFeed 的实时功能
      ——在 FriendFeed 的应用里每一个活动用户都会保持着一个服务器连接。（关于如何扩容
      服务器，以处理数以千计的客户端的连接的问题，请参阅 <a href="http://www.kegel.com/c10k.html">The C10K problem</a> ）</p>
    <p>以下是经典的 “Hello, world” 示例：</p>
    <pre><code>import tornado.ioloop
import tornado.web

class MainHandler(tornado.web.RequestHandler):
    def get(self):
        self.write("Hello, world")

application = tornado.web.Application([
    (r"/", MainHandler),
])

if __name__ == "__main__":
    application.listen(8888)
    tornado.ioloop.IOLoop.instance().start()
</code></pre>
    <p>查看下面的 <a href="#tornado-walkthrough">Tornado 攻略</a>以了解更多关于 <code>tornado.web</code> 包
      的细节。</p>
    <p>我们清理了 Tornado 的基础代码，减少了各模块之间的相互依存关系，所以理论上讲，
      你可以在自己的项目中独立地使用任何模块，而不需要使用整个包。</p>
    <h2 id="download">下载和安装</h2>
    <p></p>
    <p><b>自动安装：</b> Tornado 已经列入 <a href="http://pypi.python.org/pypi/tornado">PyPI</a> ，因此可以通过 <code>pip</code> 或者 <code>easy_install</code> 来安装。如果你没有安装 libcurl  的话，你需要将其单独安装到系统中。请参见下面的安装依赖一节。注意一点，使用 <code>pip</code> 或 <code>easy_install</code> 安装的 Tornado 并没有包含源代码中的 demo 程序。</p>
    <p></p>
    <p></p>
    <p><b>手动安装：</b> 下载 <a href="http://github.com/downloads/facebook/tornado/tornado-2.0.tar.gz">tornado-2.0.tar.gz</a></p>
    <pre><code>tar xvzf tornado-2.0.tar.gz
cd tornado-2.0
python setup.py build
sudo python setup.py install</code></pre>
    <p>Tornado 的代码托管在 <a href="http://sebug.net/paper/books/tornado/">GitHub</a> 上面。对于 Python 2.6 以上的版本，因为标准库中已经包括了对 <code>epoll</code> 的支持，所以你可以不用 <code>setup.py</code> 编译安装，只要简单地将 tornado 的目录添加到 <code>PYTHONPATH</code> 就可以使用了。</p>
    <p></p>
    <h3>安装需求</h3>
    <p>Tornado 在 Python 2.5, 2.6, 2.7 中都经过了测试。要使用 Tornado 的所有功能，你需要安装 <a href="http://pycurl.sourceforge.net/">PycURL</a> (7.18.2 或更高版本) 以及 <a href="http://pypi.python.org/pypi/simplejson/">simplejson</a> (仅适用于Python 2.5，2.6 以后的版本标准库当中已经包含了对 JSON 的支持)。为方便起见，下面将列出 Mac OS X 和 Ubuntu 中的完整安装方式：</p>
    <p style="font-weight:bold">Mac OS X 10.6 (Python 2.6+)</p>
    <pre><code>sudo easy_install setuptools pycurl</code></pre>
    <p></p>
    <p></p>
    <p style="font-weight:bold">Ubuntu Linux (Python 2.6+)</p>
    <pre><code>sudo apt-get install python-pycurl</code></pre>
    <p></p>
    <p></p>
    <p style="font-weight:bold">Ubuntu Linux (Python 2.5)</p>
    <pre><code>sudo apt-get install python-dev python-pycurl python-simplejson</code></pre>
    <p></p>
    <h2 id="_1">模块索引</h2>
    <p>最重要的一个模块是<a href="http://github.com/facebook/tornado/blob/master/tornado/web.py"><code>web</code></a>，
      它就是包含了 Tornado 的大部分主要功能的 Web 框架。其它的模块都是工具性质的，
      以便让 <code>web</code> 模块更加有用 后面的 <a href="#tornado-walkthrough">Tornado 攻略</a> 详细讲解了 <code>web</code> 模块的使用方法。</p>
    <h3 id="_2">主要模块</h3>
    <ul>
      <li><a href="http://github.com/facebook/tornado/blob/master/tornado/web.py"><code>web</code></a> - FriendFeed 使用的基础 Web 框架，包含了 Tornado 的大多数重要的功能</li>
      <li><a href="http://github.com/facebook/tornado/blob/master/tornado/escape.py"><code>escape</code></a> - XHTML, JSON, URL 的编码/解码方法</li>
      <li><a href="http://github.com/facebook/tornado/blob/master/tornado/database.py"><code>database</code></a> - 对 <code>MySQLdb</code> 的简单封装，使其更容易使用</li>
      <li><a href="http://github.com/facebook/tornado/blob/master/tornado/template.py"><code>template</code></a> - 基于 Python 的 web 模板系统</li>
      <li><a href="http://github.com/facebook/tornado/blob/master/tornado/httpclient.py"><code>httpclient</code></a> - 非阻塞式 HTTP 客户端，它被设计用来和 <code>web</code> 及 <code>httpserver</code> 协同工作</li>
      <li><a href="http://github.com/facebook/tornado/blob/master/tornado/auth.py"><code>auth</code></a> - 第三方认证的实现（包括 Google OpenID/OAuth、Facebook Platform、Yahoo BBAuth、FriendFeed OpenID/OAuth、Twitter OAuth）</li>
      <li><a href="http://github.com/facebook/tornado/blob/master/tornado/locale.py"><code>locale</code></a> - 针对本地化和翻译的支持</li>
      <li><a href="http://github.com/facebook/tornado/blob/master/tornado/options.py"><code>options</code></a> - 命令行和配置文件解析工具，针对服务器环境做了优化</li>
    </ul>
    <h3 id="_3">底层模块</h3>
    <ul>
      <li><a href="http://github.com/facebook/tornado/blob/master/tornado/httpserver.py"><code>httpserver</code></a> - 服务于 <code>web</code> 模块的一个非常简单的 HTTP 服务器的实现</li>
      <li><a href="http://github.com/facebook/tornado/blob/master/tornado/iostream.py"><code>iostream</code></a> - 对非阻塞式的 socket 的简单封装，以方便常用读写操作</li>
      <li><a href="http://github.com/facebook/tornado/blob/master/tornado/ioloop.py"><code>ioloop</code></a> - 核心的 I/O 循环</li>
    </ul>
    <h2 id="tornado">Tornado 攻略</h2>
    <h3 id="_4">请求处理程序和请求参数</h3>
    <p>Tornado 的 Web 程序会将 URL 或者 URL 范式映射到 <code>tornado.web.RequestHandler</code> 的子类上去。在其子类中定义了 <code>get()</code> 或 <code>post()</code> 方法，用以处理不同的 HTTP 
      请求。</p>
    <p>下面的代码将 URL 根目录 <code>/</code> 映射到 <code>MainHandler</code>，还将一个 URL 范式 <code>/story/([0-9]+)</code> 映射到 <code>StoryHandler</code>。正则表达式匹配的分组会作为参数引入
      的相应方法中：</p>
    <pre><code>class MainHandler(tornado.web.RequestHandler):
    def get(self):
        self.write("You requested the main page")

class StoryHandler(tornado.web.RequestHandler):
    def get(self, story_id):
        self.write("You requested the story " + story_id)

application = tornado.web.Application([
    (r"/", MainHandler),
    (r"/story/([0-9]+)", StoryHandler),
])
</code></pre>
    <p>你可以使用 <code>get_argument()</code> 方法来获取查询字符串参数，以及解析 <code>POST</code> 的内容：</p>
    <pre><code>class MainHandler(tornado.web.RequestHandler):
    def get(self):
        self.write('&lt;html&gt;&lt;body&gt;&lt;form action="/" method="post"&gt;'
                   '&lt;input type="text" name="message"&gt;'
                   '&lt;input type="submit" value="Submit"&gt;'
                   '&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;')

    def post(self):
        self.set_header("Content-Type", "text/plain")
        self.write("You wrote " + self.get_argument("message"))
</code></pre>
    <p>上传的文件可以通过 <code>self.request.files</code> 访问到，该对象将名称（HTML元素 <code>&lt;input type="file"&gt;</code>的 name 属性）对应到一个文件列表。每一个文件都以字典的形式
      存在，其格式为 <code>{"filename":..., "content_type":..., "body":...}</code>。</p>
    <p>如果你想要返回一个错误信息给客户端，例如“403 unauthorized”，只需要抛出一个 <code>tornado.web.HTTPError</code> 异常：</p>
    <pre><code>if not self.user_is_logged_in():
    raise tornado.web.HTTPError(403)
</code></pre>
    <p>请求处理程序可以通过 <code>self.request</code> 访问到代表当前请求的对象。该 <code>HTTPRequest</code> 对象包含了一些有用的属性，包括：</p>
    <ul>
      <li><code>arguments</code> - 所有的 <code>GET</code> 或 <code>POST</code> 的参数</li>
      <li><code>files</code> - 所有通过 <code>multipart/form-data</code> POST 请求上传的文件</li>
      <li><code>path</code> - 请求的路径（ <code>?</code> 之前的所有内容）</li>
      <li><code>headers</code> - 请求的开头信息</li>
    </ul>
    <p>你可以通过查看源代码 <code>httpserver</code> 模组中 <code>HTTPRequest</code> 的定义，从而了解到它的
      所有属性。</p>
    <h3 id="requesthandler">重写 RequestHandler 的方法函数</h3>
    <p>除了 <code>get()</code>/<code>post()</code>等以外，<code>RequestHandler</code> 中的一些别的方法函数，这都是
      一些空函数，它们存在的目的是在必要时在子类中重新定义其内容。对于一个请求的处理
      的代码调用次序如下：</p>
    <ol>
      <li>程序为每一个请求创建一个 RequestHandler 对象</li>
      <li>程序调用 <code>initialize()</code> 函数，这个函数的参数是 <code>Application</code> 配置中的关键字
        参数定义。（<code>initialize</code> 方法是 Tornado 1.1 中新添加的，旧版本中你需要
        重写 <code>__init__</code> 以达到同样的目的） <code>initialize</code> 方法一般只是把传入的参数存
        到成员变量中，而不会产生一些输出或者调用像 <code>send_error</code> 之类的方法。</li>
      <li>程序调用 <code>prepare()</code>。无论使用了哪种 HTTP 方法，<code>prepare</code> 都会被调用到，因此
        这个方法通常会被定义在一个基类中，然后在子类中重用。prepare<code>可以产生输出
        信息。如果它调用了</code>finish<code>（或</code>send_error` 等函数），那么整个处理流程
        就此结束。</li>
      <li>程序调用某个 HTTP 方法：例如 <code>get()</code>、<code>post()</code>、<code>put()</code> 等。如果 URL 
        的正则表达式模式中有分组匹配，那么相关匹配会作为参数传入方法。</li>
    </ol>
    <p>下面是一个示范 <code>initialize()</code> 方法的例子：</p>
    <pre><code>class ProfileHandler(RequestHandler):
    def initialize(self, database):
        self.database = database

    def get(self, username):
        ...

app = Application([
    (r'/user/(.*)', ProfileHandler, dict(database=database)),
    ])
</code></pre>
    <p>其它设计用来被复写的方法有：</p>
    <ul>
      <li><code>get_error_html(self, status_code, exception=None, **kwargs)</code> - 以字符串的形式
        返回 HTML，以供错误页面使用。</li>
      <li><code>get_current_user(self)</code> - 查看下面的<a href="#user-authentication">用户认证</a>一节</li>
      <li><code>get_user_locale(self)</code> - 返回 <code>locale</code> 对象，以供当前用户使用。</li>
      <li><code>get_login_url(self)</code> - 返回登录网址，以供 <code>@authenticated</code> 装饰器使用（默认位置
        在 <code>Application</code> 设置中）</li>
      <li><code>get_template_path(self)</code> - 返回模板文件的路径（默认是 <code>Application</code> 中的设置）</li>
    </ul>
    <h3 id="redirect">重定向(redirect)</h3>
    <p>Tornado 中的重定向有两种主要方法：<code>self.redirect</code>，或者使用 <code>RedirectHandler</code>。</p>
    <p>你可以在使用 <code>RequestHandler</code> （例如 <code>get</code>）的方法中使用 <code>self.redirect</code>，将用户
      重定向到别的地方。另外还有一个可选参数 <code>permanent</code>，你可以用它指定这次操作为永久性重定向。</p>
    <p>该参数会激发一个 <code>301 Moved Permanently</code> HTTP 状态，这在某些情况下是有用的，
      例如，你要将页面的原始链接重定向时，这种方式会更有利于搜索引擎优化（SEO）。</p>
    <p><code>permanent</code> 的默认值是 <code>False</code>，这是为了适用于常见的操作，例如用户端在成功发送 POST 请求
      以后的重定向。</p>
    <pre><code>self.redirect('/some-canonical-page', permanent=True)
</code></pre>
    <p><code>RedirectHandler</code> 会在你初始化 <code>Application</code> 时自动生成。</p>
    <p>例如本站的下载 URL，由较短的 URL 重定向到较长的 URL 的方式是这样的：</p>
    <pre><code>application = tornado.wsgi.WSGIApplication([
    (r"/([a-z]*)", ContentHandler),
    (r"/static/tornado-0.2.tar.gz", tornado.web.RedirectHandler,
     dict(url="http://github.com/downloads/facebook/tornado/tornado-0.2.tar.gz")),
], **settings)
</code></pre>
    <p><code>RedirectHandler</code> 的默认状态码是 <code>301 Moved Permanently</code>，不过如果你想使用 <code>302 Found</code> 状态码，你需要将 <code>permanent</code> 设置为 <code>False</code>。</p>
    <pre><code>application = tornado.wsgi.WSGIApplication([
    (r"/foo", tornado.web.RedirectHandler, {"url":"/bar", "permanent":False}),
], **settings)
</code></pre>
    <p>注意，在 <code>self.redirect</code> 和 <code>RedirectHandler</code> 中，<code>permanent</code> 的默认值是不同的。
      这样做是有一定道理的，<code>self.redirect</code> 通常会被用在自定义方法中，是由逻辑事件触发
      的（例如环境变更、用户认证、以及表单提交）。而 <code>RedirectHandler</code> 是在每次匹配到请求 URL
      时被触发。</p>
    <h3 id="_5">模板</h3>
    <p>你可以在 Tornado 中使用任何一种 Python 支持的模板语言。但是相较于其它模板而言，
      Tornado 自带的模板系统速度更快，并且也更灵活。具体可以查看 <a href="http://github.com/facebook/tornado/blob/master/tornado/template.py"><code>template</code></a> 模块的源码。</p>
    <p>Tornado 模板其实就是 HTML 文件（也可以是任何文本格式的文件），其中包含了
      Python 控制结构和表达式，这些控制结构和表达式需要放在规定的格式标记符(markup)中：</p>
    <pre><code>&lt;html&gt;
   &lt;head&gt;
      &lt;title&gt;{{ title }}&lt;/title&gt;
   &lt;/head&gt;
   &lt;body&gt;
     &lt;ul&gt;
       {% for item in items %}
         &lt;li&gt;{{ escape(item) }}&lt;/li&gt;
       {% end %}
     &lt;/ul&gt;
   &lt;/body&gt;
 &lt;/html&gt;
</code></pre>
    <p>如果你把上面的代码命名为 "template.html"，保存在 Python 代码的同一目录中，你就可以
      这样来渲染它：</p>
    <pre><code>class MainHandler(tornado.web.RequestHandler):
    def get(self):
        items = ["Item 1", "Item 2", "Item 3"]
        self.render("template.html", title="My title", items=items)
</code></pre>
    <p>Tornado 的模板支持“控制语句”和“表达语句”，控制语句是使用 <code>{%</code> 和 <code>%}</code> 包起来的
      例如 <code>{% if len(items) &gt; 2 %}</code>。表达语句是使用 <code>{{</code> 和 <code>}}</code> 包起来的，例如 <code>{{ items[0] }}</code>。</p>
    <p>控制语句和对应的 Python 语句的格式基本完全相同。我们支持 <code>if</code>、<code>for</code>、<code>while</code> 和 <code>try</code>，这些语句逻辑结束的位置需要用 <code>{% end %}</code> 做标记。我们还通过 <code>extends</code> 和 <code>block</code> 语句实现了模板继承。这些在 <a href="http://github.com/facebook/tornado/blob/master/tornado/template.py"><code>template</code> 模块</a> 的代码文档中有着详细的描述。</p>
    <p>表达语句可以是包括函数调用在内的任何 Python 表述。模板中的相关代码，会在一个单独
      的名字空间中被执行，这个名字空间包括了以下的一些对象和方法。（注意，下面列表中
      的对象或方法在使用 <code>RequestHandler.render</code> 或者 <code>render_string</code> 时才存在的
      ，如果你在 <code>RequestHandler</code> 外面直接使用 <code>template</code> 模块，则它们中的大部分是不存在的）。</p>
    <ul>
      <li><code>escape</code>: <code>tornado.escape.xhtml_escape</code> 的別名</li>
      <li><code>xhtml_escape</code>: <code>tornado.escape.xhtml_escape</code> 的別名</li>
      <li><code>url_escape</code>: <code>tornado.escape.url_escape</code> 的別名</li>
      <li><code>json_encode</code>: <code>tornado.escape.json_encode</code> 的別名</li>
      <li><code>squeeze</code>: <code>tornado.escape.squeeze</code> 的別名</li>
      <li><code>linkify</code>: <code>tornado.escape.linkify</code> 的別名</li>
      <li><code>datetime</code>: Python 的 <code>datetime</code> 模组 </li>
      <li><code>handler</code>: 当前的 <code>RequestHandler</code> 对象</li>
      <li><code>request</code>: <code>handler.request</code> 的別名</li>
      <li><code>current_user</code>: <code>handler.current_user</code> 的別名</li>
      <li><code>locale</code>: <code>handler.locale</code> 的別名</li>
      <li><code>_</code>: <code>handler.locale.translate</code> 的別名</li>
      <li><code>static_url</code>: for <code>handler.static_url</code> 的別名</li>
      <li><code>xsrf_form_html</code>: <code>handler.xsrf_form_html</code> 的別名</li>
      <li><code>reverse_url</code>: <code>Application.reverse_url</code> 的別名</li>
      <li><code>Application</code> 设置中 <code>ui_methods</code> 和 <code>ui_modules</code> 下面的所有项目</li>
      <li>任何传递给 <code>render</code> 或者 <code>render_string</code> 的关键字参数</li>
    </ul>
    <p>当你制作一个实际应用时，你会需要用到 Tornado 模板的所有功能，尤其是
      模板继承功能。所有这些功能都可以在 <a href="http://github.com/facebook/tornado/blob/master/tornado/template.py"><code>template</code> 模块</a> 的代码文档中了解到。（其中一些功能是在 <code>web</code> 模块中实现的，例如 <code>UIModules</code>）</p>
    <p>从实现方式来讲，Tornado 的模板会被直接转成 Python 代码。模板中的语句会逐字复制到一个
      代表模板的函数中去。我们不会对模板有任何限制，Tornado 模板模块的设计宗旨就是要比
      其他模板系统更灵活而且限制更少。所以，当你的模板语句里发生了随机的错误，在执行模板时
      你就会看到随机的 Python 错误信息。</p>
    <p>所有的模板输出都已经通过 <code>tornado.escape.xhtml_escape</code> 自动转义(escape)，这种默认行为，
      可以通过以下几种方式修改：将 <code>autoescape=None</code> 传递给 <code>Application</code> 或者 <code>TemplateLoader</code>、
      在模板文件中加入 <code>{% autoescape None %}</code>、或者在简单表达语句 <code>{{ ... }}</code> 写成 <code>{% raw ...%}</code>。另外你可以在上述位置将 <code>autoescape</code> 设为一个自定义函数，而不仅仅是 <code>None</code>。 </p>
    <h3 id="cookie-cookie">Cookie 和安全 Cookie</h3>
    <p>你可以使用 <code>set_cookie</code> 方法在用户的浏览中设置 cookie：</p>
    <pre><code>class MainHandler(tornado.web.RequestHandler):
    def get(self):
        if not self.get_cookie("mycookie"):
            self.set_cookie("mycookie", "myvalue")
            self.write("Your cookie was not set yet!")
        else:
            self.write("Your cookie was set!")
</code></pre>
    <p>Cookie 很容易被恶意的客户端伪造。加入你想在 cookie 中保存当前登陆用户的 id
      之类的信息，你需要对 cookie 作签名以防止伪造。Tornado 通过 <code>set_secure_cookie</code> 和 <code>get_secure_cookie</code> 方法直接支持了这种功能。
      要使用这些方法，你需要在创建应用时提供一个密钥，名字为 <code>cookie_secret</code>。
      你可以把它作为一个关键词参数传入应用的设置中：</p>
    <pre><code>application = tornado.web.Application([
    (r"/", MainHandler),
], cookie_secret="61oETzKXQAGaYdkL5gEmGeJJFuYh7EQnp2XdTP1o/Vo=")
</code></pre>
    <p>签名过的 cookie 中包含了编码过的 cookie 值，另外还有一个时间戳和一个 <a href="http://en.wikipedia.org/wiki/HMAC">HMAC</a> 签名。如果 cookie 已经过期或者
      签名不匹配，<code>get_secure_cookie</code> 将返回 <code>None</code>，这和没有设置 cookie 时的
      返回值是一样的。上面例子的安全 cookie 版本如下：</p>
    <pre><code>class MainHandler(tornado.web.RequestHandler):
    def get(self):
        if not self.get_secure_cookie("mycookie"):
            self.set_secure_cookie("mycookie", "myvalue")
            self.write("Your cookie was not set yet!")
        else:
            self.write("Your cookie was set!")
</code></pre>
    <h3 id="_6">用户认证</h3>
    <p>当前已经认证的用户信息被保存在每一个请求处理器的 <code>self.current_user</code> 当中，
      同时在模板的 <code>current_user</code> 中也是。默认情况下，<code>current_user</code> 为 <code>None</code>。</p>
    <p>要在应用程序实现用户认证的功能，你需要复写请求处理中 <code>get_current_user()</code> 这
      个方法，在其中判定当前用户的状态，比如通过 cookie。下面的例子让用户简单地使用一个
      nickname 登陆应用，该登陆信息将被保存到 cookie 中：</p>
    <pre><code>class BaseHandler(tornado.web.RequestHandler):
    def get_current_user(self):
        return self.get_secure_cookie("user")

class MainHandler(BaseHandler):
    def get(self):
        if not self.current_user:
            self.redirect("/login")
            return
        name = tornado.escape.xhtml_escape(self.current_user)
        self.write("Hello, " + name)

class LoginHandler(BaseHandler):
    def get(self):
        self.write('&lt;html&gt;&lt;body&gt;&lt;form action="/login" method="post"&gt;'
                   'Name: &lt;input type="text" name="name"&gt;'
                   '&lt;input type="submit" value="Sign in"&gt;'
                   '&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;')

    def post(self):
        self.set_secure_cookie("user", self.get_argument("name"))
        self.redirect("/")

application = tornado.web.Application([
    (r"/", MainHandler),
    (r"/login", LoginHandler),
], cookie_secret="61oETzKXQAGaYdkL5gEmGeJJFuYh7EQnp2XdTP1o/Vo=")
</code></pre>
    <p>对于那些必须要求用户登陆的操作，可以使用装饰器 <code>tornado.web.authenticated</code>。
      如果一个方法套上了这个装饰器，但是当前用户并没有登陆的话，页面会被重定向到 <code>login_url</code>（应用配置中的一个选项），上面的例子可以被改写成：</p>
    <pre><code>class MainHandler(BaseHandler):
    @tornado.web.authenticated
    def get(self):
        name = tornado.escape.xhtml_escape(self.current_user)
        self.write("Hello, " + name)

settings = {
    "cookie_secret": "61oETzKXQAGaYdkL5gEmGeJJFuYh7EQnp2XdTP1o/Vo=",
    "login_url": "/login",
}
application = tornado.web.Application([
    (r"/", MainHandler),
    (r"/login", LoginHandler),
], **settings)
</code></pre>
    <p>如果你使用 <code>authenticated</code> 装饰器来装饰 <code>post()</code> 方法，那么在用户没有登陆的状态下，
      服务器会返回 403 错误。</p>
    <p>Tornado 内部集成了对第三方认证形式的支持，比如 Google 的 OAuth 。参阅 <a href="http://github.com/facebook/tornado/blob/master/tornado/auth.py"><code>auth</code> 模块</a> 的代码文档以了解更多信息。 for more details. Check<code>auth</code> 模块以了解更多的细节。在 Tornado 的源码中有一个 Blog 的例子，你也可以从那里看到
      用户认证的方法（以及如何在 MySQL 数据库中保存用户数据）。</p>
    <h3 id="_7">跨站伪造请求的防范</h3>
    <p><a href="http://en.wikipedia.org/wiki/Cross-site_request_forgery">跨站伪造请求(Cross-site request forgery)</a>，
      简称为 XSRF，是个性化 Web 应用中常见的一个安全问题。前面的链接也详细讲述了 XSRF 
      攻击的实现方式。</p>
    <p>当前防范 XSRF 的一种通用的方法，是对每一个用户都记录一个无法预知的 cookie 
      数据，然后要求所有提交的请求中都必须带有这个 cookie 数据。如果此数据不匹配
      ，那么这个请求就可能是被伪造的。</p>
    <p>Tornado 有内建的 XSRF 的防范机制，要使用此机制，你需要在应用配置中加上 <code>xsrf_cookies</code> 设定：</p>
    <pre><code>settings = {
    "cookie_secret": "61oETzKXQAGaYdkL5gEmGeJJFuYh7EQnp2XdTP1o/Vo=",
    "login_url": "/login",
    "xsrf_cookies": True,
}
application = tornado.web.Application([
    (r"/", MainHandler),
    (r"/login", LoginHandler),
], **settings)
</code></pre>
    <p>如果设置了 <code>xsrf_cookies</code>，那么 Tornado 的 Web 应用将对所有用户设置一个 <code>_xsrf</code> 的 cookie 值，如果 <code>POST</code> <code>PUT</code> <code>DELET</code> 请求中没有这
      个 cookie 值，那么这个请求会被直接拒绝。如果你开启了这个机制，那么在所有
      被提交的表单中，你都需要加上一个域来提供这个值。你可以通过在模板中使用
      专门的函数 <code>xsrf_form_html()</code> 来做到这一点：</p>
    <pre><code>&lt;form action="/new_message" method="post"&gt;
  {{ xsrf_form_html() }}
  &lt;input type="text" name="message"/&gt;
  &lt;input type="submit" value="Post"/&gt;
&lt;/form&gt;
</code></pre>
    <p>如果你提交的是 AJAX 的 <code>POST</code> 请求，你还是需要在每一个请求中通过脚本添加上 <code>_xsrf</code> 这个值。下面是在 FriendFeed 中的 AJAX 的 <code>POST</code> 请求，使用了 <a href="http://jquery.com/" rel="nofollow">jQuery</a> 函数来为所有请求组东添加 <code>_xsrf</code> 值：</p>
    <pre><code>function getCookie(name) {
    var r = document.cookie.match("\\b" + name + "=([^;]*)\\b");
    return r ? r[1] : undefined;
}

jQuery.postJSON = function(url, args, callback) {
    args._xsrf = getCookie("_xsrf");
    $.ajax({url: url, data: $.param(args), dataType: "text", type: "POST",
        success: function(response) {
        callback(eval("(" + response + ")"));
    }});
};
</code></pre>
    <p>对于 <code>PUT</code> 和 <code>DELETE</code> 请求（以及不使用将 form 内容作为参数的 <code>POST</code> 请求）
      来说，你也可以在 HTTP 头中以 <code>X-XSRFToken</code> 这个参数传递 XSRF token。</p>
    <p>如果你需要针对每一个请求处理器定制 XSRF 行为，你可以重写 <code>RequestHandler.check_xsrf_cookie()</code>。例如你需要使用一个不支持 cookie 的 API，
      你可以通过将 <code>check_xsrf_cookie()</code> 函数设空来禁用 XSRF 保护机制。然而如果
      你需要同时支持 cookie 和非 cookie 认证方式，那么只要当前请求是通过 cookie 
      进行认证的，你就应该对其使用 XSRF 保护机制，这一点至关重要。</p>
    <h3 id="_8">静态文件和主动式文件缓存</h3>
    <p>你能通过在应用配置中指定 <code>static_path</code> 选项来提供静态文件服务：</p>
    <pre><code>settings = {
    "static_path": os.path.join(os.path.dirname(__file__), "static"),
    "cookie_secret": "61oETzKXQAGaYdkL5gEmGeJJFuYh7EQnp2XdTP1o/Vo=",
    "login_url": "/login",
    "xsrf_cookies": True,
}
application = tornado.web.Application([
    (r"/", MainHandler),
    (r"/login", LoginHandler),
    (r"/(apple-touch-icon\.png)", tornado.web.StaticFileHandler, dict(path=settings['static_path'])),
], **settings)
</code></pre>
    <p>这样配置后，所有以 <code>/static/</code> 开头的请求，都会直接访问到指定的静态文件目录，
      比如 http://localhost:8888/static/foo.png
      会从指定的静态文件目录中访问到 <code>foo.png</code> 这个文件。同时 <code>/robots.txt</code> 和 <code>/favicon.ico</code> 也是会自动作为静态文件处理（即使它们不是以 <code>/static/</code> 开头）。</p>
    <p>在上述配置中，我们使用 <code>StaticFileHandler</code> 特别指定了让 Tornado 从根目录伺服 <code>apple-touch-icon.png</code> 这个文件，尽管它的物理位置还是在静态文件目录中。（正则表达式
      的匹配分组的目的是向 <code>StaticFileHandler</code> 指定所请求的文件名称，抓取到的分组会以
      方法参数的形式传递给处理器。）通过相同的方式，你也可以从站点的更目录伺服 <code>sitemap.xml</code> 文件。当然，你也可以通过在 HTML 中使用正确的 <code>&lt;link /&gt;</code> 标签来避免这样的根目录
      文件伪造行为。</p>
    <p>为了提高性能，在浏览器主动缓存静态文件是个不错的主意。这样浏览器就不需要发送
      不必要的 <code>If-Modified-Since</code> 和 <code>Etag</code> 请求，从而影响页面的渲染速度。
      Tornado 可以通过内建的“静态内容分版(static content versioning)”来直接支持这种功能。</p>
    <p>要使用这个功能，在模板中就不要直接使用静态文件的 URL 地址了，你需要在 HTML 中使用 <code>static_url()</code> 这个方法来提供 URL 地址：</p>
    <pre><code>&lt;html&gt;
   &lt;head&gt;
      &lt;title&gt;FriendFeed - {{ _("Home") }}&lt;/title&gt;
   &lt;/head&gt;
   &lt;body&gt;
     &lt;div&gt;&lt;img src="{{ static_url("images/logo.png") }}"/&gt;&lt;/div&gt;
   &lt;/body&gt;
 &lt;/html&gt;
</code></pre>
    <p><code>static_url()</code> 函数会将相对地址转成一个类似于 <code>/static/images/logo.png?v=aae54</code> 的 URI，<code>v</code> 参数是 <code>logo.png</code> 文件的散列值，
      Tornado 服务器会把它发给浏览器，并以此为依据让浏览器对相关内容做永久缓存。</p>
    <p>由于 <code>v</code> 的值是基于文件的内容计算出来的，如果你更新了文件，或者重启了服务器
      ，那么就会得到一个新的 <code>v</code> 值，这样浏览器就会请求服务器以获取新的文件内容。
      如果文件的内容没有改变，浏览器就会一直使用本地缓存的文件，这样可以显著提高页
      面的渲染速度。</p>
    <p>在生产环境下，你可能会使用<a href="http://nginx.net/" rel="nofollow">nginx</a>这样的更有利于静态文件
      伺服的服务器，你可以将 Tornado 的文件缓存指定到任何静态文件服务器上面，下面
      是 FriendFeed 使用的 nginx 的相关配置：</p>
    <pre><code>location /static/ {
    root /var/friendfeed/static;
    if ($query_string) {
        expires max;
    }
 }
</code></pre>
    <h3 id="_9">本地化</h3>
    <p>不管有没有登陆，当前用户的 locale 设置可以通过两种方式访问到：请求处理器的 <code>self.locale</code> 对象、以及模板中的 <code>locale</code> 值。Locale 的名称（如 <code>en_US</code>）可以
      通过 <code>locale.name</code> 这个变量访问到，你可以使用 <code>locale.translate</code> 来进行本地化
      翻译。在模板中，有一个全局方法叫 <code>_()</code>，它的作用就是进行本地化的翻译。这个
      翻译方法有两种使用形式：</p>
    <pre><code>_("Translate this string")
</code></pre>
    <p>它会基于当前 locale 设置直接进行翻译，还有一种是：</p>
    <pre><code>_("A person liked this", "%(num)d people liked this", len(people)) % {"num": len(people)}
</code></pre>
    <p>这种形式会根据第三个参数来决定是使用单数或是复数的翻译。上面的例子中，如果 <code>len(people)</code> 是 <code>1</code> 的话，就使用第一种形式的翻译，否则，就使用第二种形式
      的翻译。</p>
    <p>常用的翻译形式是使用 Python 格式化字符串时的“固定占位符(placeholder)”语法，（例如上面的 <code>%(num)d</code>），和普通占位符比起来，固定占位符的优势是使用时没有顺序限制。</p>
    <p>一个本地化翻译的模板例子：</p>
    <pre><code>&lt;html&gt;
   &lt;head&gt;
      &lt;title&gt;FriendFeed - {{ _("Sign in") }}&lt;/title&gt;
   &lt;/head&gt;
   &lt;body&gt;
     &lt;form action="{{ request.path }}" method="post"&gt;
       &lt;div&gt;{{ _("Username") }} &lt;input type="text" name="username"/&gt;&lt;/div&gt;
       &lt;div&gt;{{ _("Password") }} &lt;input type="password" name="password"/&gt;&lt;/div&gt;
       &lt;div&gt;&lt;input type="submit" value="{{ _("Sign in") }}"/&gt;&lt;/div&gt;
       {{ xsrf_form_html() }}
     &lt;/form&gt;
   &lt;/body&gt;
 &lt;/html&gt;
</code></pre>
    <p>默认情况下，我们通过 <code>Accept-Language</code> 这个头来判定用户的 locale，如果没有，
      则取 <code>en_US</code> 这个值。如果希望用户手动设置一个 locale 偏好，可以在处理请求的
      类中复写 <code>get_user_locale</code> 方法：</p>
    <pre><code>class BaseHandler(tornado.web.RequestHandler):
    def get_current_user(self):
        user_id = self.get_secure_cookie("user")
        if not user_id: return None
        return self.backend.get_user_by_id(user_id)

    def get_user_locale(self):
        if "locale" not in self.current_user.prefs:
            # Use the Accept-Language header
            return None
        return self.current_user.prefs["locale"]
</code></pre>
    <p>如果 <code>get_user_locale</code> 返回 <code>None</code>，那么就会再去取 <code>Accept-Language</code> header 的值。</p>
    <p>你可以使用 <code>tornado.locale.load_translations</code> 方法获取应用中的所有已存在的翻
      译。它会找到包含有特定名字的 CSV 文件的目录，如 <code>es_GT.csv</code> <code>fr_CA.csv</code> 这
      些 csv 文件。然后从这些 CSV 文件中读取出所有的与特定语言相关的翻译内容。典型的用例
      里面，我们会在 Tornado 服务器的 <code>main()</code> 方法中调用一次该函数：</p>
    <pre><code>def main():
    tornado.locale.load_translations(
        os.path.join(os.path.dirname(__file__), "translations"))
    start_server()
</code></pre>
    <p>你可以使用 <code>tornado.locale.get_supported_locales()</code> 方法得到支持的 
      locale 列表。Tornado 会依据用户当前的 locale 设置以及已有的翻译，为用户选择
      一个最佳匹配的显示语言。比如，用户的 locale 是 <code>es_GT</code> 而翻译中只支持了 <code>es</code>，
      那么 <code>self.locale</code> 就会被设置为 <code>es</code>。如果找不到最接近的 locale 匹配，<code>self.locale</code> 就会就会取备用值 <code>es_US</code>。</p>
    <p>查看 <a href="http://github.com/facebook/tornado/blob/master/tornado/locale.py"><code>locale</code> 模块</a> 的代码文档以了解 CSV 文件的格式，以及其它的本地化方法函数。</p>
    <h3 id="ui">UI 模块</h3>
    <p>Tornado 支持一些 UI 模块，它们可以帮你创建标准的，易被重用的应用程序级的 UI 组件。
      这些 UI 模块就跟特殊的函数调用一样，可以用来渲染页面组件，而这些组件可以有自己的
      CSS 和 JavaScript。</p>
    <p>例如你正在写一个博客的应用，你希望在首页和单篇文章的页面都显示文章列表，你可以创建
      一个叫做 <code>Entry</code> 的 UI 模块，让他在两个地方分别显示出来。首选需要为你的 UI 模块
      创建一个 Python 模组文件，就叫 <code>uimodules.py</code> 好了:</p>
    <pre><code>class Entry(tornado.web.UIModule):
    def render(self, entry, show_comments=False):
        return self.render_string(
            "module-entry.html", entry=entry, show_comments=show_comments)
</code></pre>
    <p>然后通过 <code>ui_modules</code> 配置项告诉 Tornado 在应用当中使用 <code>uimodules.py</code>：</p>
    <pre><code>class HomeHandler(tornado.web.RequestHandler):
    def get(self):
        entries = self.db.query("SELECT * FROM entries ORDER BY date DESC")
        self.render("home.html", entries=entries)

class EntryHandler(tornado.web.RequestHandler):
    def get(self, entry_id):
        entry = self.db.get("SELECT * FROM entries WHERE id = %s", entry_id)
        if not entry: raise tornado.web.HTTPError(404)
        self.render("entry.html", entry=entry)

settings = {
    "ui_modules": uimodules,
}
application = tornado.web.Application([
    (r"/", HomeHandler),
    (r"/entry/([0-9]+)", EntryHandler),
], **settings)
</code></pre>
    <p>在 <code>home.html</code> 中，你不需要写繁复的 HTML 代码，只要引用 <code>Entry</code> 就可以了：</p>
    <pre><code>{% for entry in entries %}
  {% module Entry(entry) %}
{% end %}
</code></pre>
    <p>在 <code>entry.html</code> 里面，你需要使用 <code>show_comments</code> 参数来引用 <code>Entry</code> 模块，用来
      显示展开的 <code>Entry</code> 内容：</p>
    <pre><code>{% module Entry(entry, show_comments=True) %}
</code></pre>
    <p>你可以为 UI 模型配置自己的 CSS 和 JavaScript ，只要复写 <code>embedded_css</code>、 <code>embedded_javascript</code>、<code>javascipt_files</code>、<code>css_files</code> 就可以了：</p>
    <pre><code>class Entry(tornado.web.UIModule):
    def embedded_css(self):
        return ".entry { margin-bottom: 1em; }"

    def render(self, entry, show_comments=False):
        return self.render_string(
            "module-entry.html", show_comments=show_comments)
</code></pre>
    <p>即使一页中有多个相同的 UI 组件，UI 组件的 CSS 和 JavaScript 部分只会被渲染一次。
      CSS 是在页面的 <code>&lt;head&gt;</code> 部分，而 JavaScript 被渲染在页面结尾 <code>&lt;/body&gt;</code> 之前的位
      置。</p>
    <p>在不需要额外 Python 代码的情况下，模板文件也可以当做 UI 模块直接使用。
      例如前面的例子可以以下面的方式实现，只要把这几行放到 <code>module-entry.html</code> 中就可以了：</p>
    <pre><code>{{ set_resources(embedded_css=".entry { margin-bottom: 1em; }") }}
&lt;!-- more template html... --&gt;
</code></pre>
    <p>这个修改过的模块式模板可以通过下面的方法调用：</p>
    <pre><code>{% module Template("module-entry.html", show_comments=True) %}
</code></pre>
    <p><code>set_resources</code> 函数只能在 <code>{% module Template(...) %}</code> 调用的模板中访问到。
      和 <code>{% include ... %}</code> 不同，模块式模板使用了和它们的上级模板不同的命名
      空间——它们只能访问到全局模板命名空间和它们自己的关键字参数。</p>
    <h3 id="_10">非阻塞式异步请求</h3>
    <p>当一个处理请求的行为被执行之后，这个请求会自动地结束。因为 Tornado 当中使用了
      一种非阻塞式的 I/O 模型，所以你可以改变这种默认的处理行为——让一个请求一直保持
      连接状态，而不是马上返回，直到一个主处理行为返回。要实现这种处理方式，只需要
      使用 <code>tornado.web.asynchronous</code> 装饰器就可以了。</p>
    <p>使用了这个装饰器之后，你必须调用 <code>self.finish()</code> 已完成 HTTTP 请求，否则
      用户的浏览器会一直处于等待服务器响应的状态：</p>
    <pre><code>class MainHandler(tornado.web.RequestHandler):
    @tornado.web.asynchronous
    def get(self):
        self.write("Hello, world")
        self.finish()
</code></pre>
    <p>下面是一个使用 Tornado 内置的异步请求 HTTP 客户端去调用 FriendFeed 的 API 的例
      子：</p>
    <pre><code>class MainHandler(tornado.web.RequestHandler):
    @tornado.web.asynchronous
    def get(self):
        http = tornado.httpclient.AsyncHTTPClient()
        http.fetch("http://friendfeed-api.com/v2/feed/bret",
                   callback=self.on_response)

    def on_response(self, response):
        if response.error: raise tornado.web.HTTPError(500)
        json = tornado.escape.json_decode(response.body)
        self.write("Fetched " + str(len(json["entries"])) + " entries "
                   "from the FriendFeed API")
        self.finish()
</code></pre>
    <p>例子中，当 <code>get()</code> 方法返回时，请求处理还没有完成。在 HTTP 客户端执行它的回
      调函数 <code>on_response()</code> 时，从浏览器过来的请求仍然是存在的，只有在显式调用了 <code>self.finish()</code> 之后，才会把响应返回到浏览器。</p>
    <p>关于更多异步请求的高级例子，可以参阅 demo 中的 <code>chat</code> 这个例子。它是一个使用 <a href="http://en.wikipedia.org/wiki/Push_technology#Long_polling">long polling</a> 方式
      的 AJAX 聊天室。如果你使用到了 long polling，你可能需要复写<code>on_connection_close()</code>，
      这样你可以在客户连接关闭以后做相关的清理动作。（请查看该方法的代码文档，以防误用。）</p>
    <h3 id="http">异步 HTTP 客户端</h3>
    <p>Tornado 包含了两种非阻塞式 HTTP 客户端实现：<code>SimpleAsyncHTTPClient</code> 和 <code>CurlAsyncHTTPClient</code>。前者是直接基于 <code>IOLoop</code> 实现的，因此无需外部依赖关系。
      后者作为 Curl 客户端，需要安装 <code>libcurl</code> 和 <code>pycurl</code> 后才能正常工作，但是对于使用
      到 HTTP 规范中一些不常用内容的站点来说，它的兼容性会更好。为防止碰到
      旧版本中异步界面的 bug，我们建议你安装最近的版本的 <code>libcurl</code> 和 <code>pycurl</code>。</p>
    <p>这些客户端都有它们自己的模组(<code>tornado.simple_httpclient</code> 和 <code>tornado.curl_httpclient</code>)，你可以通过 <code>tornado.httpclient</code> 来指定使用哪一种
      客户端，默认情况下使用的是 <code>SimpleAsyncHTTPClient</code>，如果要修改默认值，只要
      在一开始调用 <code>AsyncHTTPClient.configure</code> 方法即可：</p>
    <pre><code>AsyncHTTPClient.configure('tornado.curl_httpclient.CurlAsyncHTTPClient')
</code></pre>
    <h3 id="_11">第三方认证</h3>
    <p>Tornado 的 <code>auth</code> 模块实现了现在很多流行站点的用户认证方式，包括 
      Google/Gmail、Facebook、Twitter、Yahoo 以及 FriendFeed。这个模块可以让用户使用
      这些站点的账户来登陆你自己的应用，然后你就可以在授权的条件下访问原站点的一些服
      务，比如下载用户的地址薄，在 Twitter 上发推等。</p>
    <p>下面的例子使用了 Google 的账户认证，Google 账户的身份被保存到 cookie 当中，以便
      以后的访问使用：</p>
    <pre><code>class GoogleHandler(tornado.web.RequestHandler, tornado.auth.GoogleMixin):
    @tornado.web.asynchronous
    def get(self):
        if self.get_argument("openid.mode", None):
            self.get_authenticated_user(self._on_auth)
            return
        self.authenticate_redirect()

    def _on_auth(self, user):
        if not user:
            self.authenticate_redirect()
            return
        # Save the user with, e.g., set_secure_cookie()
</code></pre>
    <p>请查看 <code>auth</code> 模块的代码文档以了解更多的细节。</p>
    <h3 id="_12">调试模式和自动重载</h3>
    <p>如果你将 <code>debug=True</code> 传递给 <code>Application</code> 构造器，该 app 将以调试模式
      运行。在调试模式下，模板将不会被缓存，而这个 app 会监视代码文件的修改，
      如果发现修改动作，这个 app 就会被重新加载。在开发过程中，这会大大减少
      手动重启服务的次数。然而有些问题（例如 import 时的语法错误）还是会让服务器
      下线，目前的 debug 模式还无法避免这些情况。</p>
    <p>调试模式和 <code>HTTPServer</code> 的多进程模式不兼容。在调试模式下，你必须将 <code>HTTPServer.start</code> 的参数设为不大于 1 的数字。</p>
    <p>调试模式下的自动重载功能可以通过独立的模块 <code>tornado.autoreload</code> 调用，
      作为测试运行器的一个可选项目，<code>tornado.testing.main</code> 中也有用到它。</p>
    <h2 id="_13">性能</h2>
    <p>一个 Web 应用的性能表现，主要看它的整体架构，而不仅仅是前端的表现。
      和其它的 Python Web 框架相比，Tornado 的速度要快很多。</p>
    <p>我们在一些流行的 Python Web 框架上（<a href="http://www.djangoproject.com/" rel="nofollow">Django</a>、 <a href="http://webpy.org/" rel="nofollow">web.py</a>、<a href="http://www.cherrypy.org/" rel="nofollow">CherryPy</a>），
      针对最简单的 Hello, world 例子作了一个测试。对于 Django 和 web.py，我们使用
      Apache/mod_wsgi 的方式来带，CherryPy 就让它自己裸跑。这也是在生产环境中各框架常用
      的部署方案。对于我们的 Tornado，使用的部署方案为前端使用 <a href="http://nginx.net/" rel="nofollow">nginx</a> 做反向代理，带动 4 个线程模式的 Tornado，这种方案也是我们推荐的在生产环境下的
      Tornado 部署方案（根据具体的硬件情况，我们推荐一个 CPU 核对应一个 Tornado 伺服实例，
      我们的负载测试使用的是四核处理器）。</p>
    <p>我们使用 Apache Benchmark (<code>ab</code>)，在另外一台机器上使用了如下指令进行负载测试：</p>
    <pre><code>ab -n 100000 -c 25 http://10.0.1.x/
</code></pre>
    <p>在 AMD Opteron 2.4GHz 的四核机器上，结果如下图所示：</p>
    <div style="text-align:center;margin-top:2em;margin-bottom:2em"><img src="Tornado%20Web%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A6%82%E8%A7%88%20-%20tornado%E6%95%99%E7%A8%8B_files/chart.png"></div>
    <p>在我们的测试当中，相较于第二快的服务器，Tornado 在数据上的表现也是它的 4 倍之
      多。即使只用了一个 CPU 核的裸跑模式，Tornado 也有 33% 的优势。</p>
    <p>这个测试不见得非常科学，不过从大体上你可以看出，我们开发 Tornado 时对于性能
      的注重程度。和其他的 Python Web 开发框架相比，它不会为你带来多少延时。</p>
    <h2 id="_14">生产环境下的部署</h2>
    <p>在 FriendFeed 中，我们使用 <a href="http://nginx.net/">nginx</a> 做负载均衡和静态文件伺服。
      我们在多台服务器上，同时部署了多个 Tornado 实例，通常，一个 CPU 内核
      会对应一个 Tornado 线程。</p>
    <p>因为我们的 Web 服务器是跑在负载均衡服务器（如 nginx）后面的，所以需要把 <code>xheaders=True</code> 传到 <code>HTTPServer</code> 的构造器当中去。这是为了让 Tornado 
      使用 <code>X-Real-IP</code> 这样的的 header 信息来获取用户的真实 IP地址，如果使用传统
      的方法，你只能得到这台负载均衡服务器的 IP 地址。</p>
    <p>下面是 nginx 配置文件的一个示例，整体上与我们在 FriendFeed 中使用的差不多。
      它假设 nginx 和 Tornado 是跑在同一台机器上的，四个 Tornado 服务跑在 8000-8003
      端口上：</p>
    <pre><code>user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    # Enumerate all the Tornado servers here
    upstream frontends {
        server 127.0.0.1:8000;
        server 127.0.0.1:8001;
        server 127.0.0.1:8002;
        server 127.0.0.1:8003;
    }

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;

    keepalive_timeout 65;
    proxy_read_timeout 200;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/html text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;

    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;

    server {
        listen 80;

        # Allow file uploads
        client_max_body_size 50M;

        location ^~ /static/ {
            root /var/www;
            if ($query_string) {
                expires max;
            }
        }
        location = /favicon.ico {
            rewrite (.*) /static/favicon.ico;
        }
        location = /robots.txt {
            rewrite (.*) /static/robots.txt;
        }

        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect false;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://frontends;
        }
    }
}
</code></pre>
    <h2 id="wsgi-google-appengine">WSGI 和 Google AppEngine</h2>
    <p>Tornado 对 <a href="http://wsgi.org/">WSGI</a> 只提供了有限的支持，即使如此，因为
      WSGI 并不支持非阻塞式的请求，所以如果你使用 WSGI 代替 Tornado 自己的
      HTTP 服务的话，那么你将无法使用 Tornado 的异步非阻塞式的请求处理方式。
      比如 <code>@tornado.web.asynchronous</code>、<code>httpclient</code> 模块、<code>auth</code> 模块，
      这些将都无法使用。</p>
    <p>你可以通过 <code>wsgi</code> 模块中的 <code>WSGIApplication</code> 创建一个有效的 WSGI 应用（区别于
      我们用过的 <code>tornado.web.Application</code>）。下面的例子展示了使用内置的 WSGI <code>CGIHandler</code> 来创建一个有效的 <a href="http://code.google.com/appengine/">Google AppEngine</a> 应用。</p>
    <pre><code>import tornado.web
import tornado.wsgi
import wsgiref.handlers

class MainHandler(tornado.web.RequestHandler):
    def get(self):
        self.write("Hello, world")

if __name__ == "__main__":
    application = tornado.wsgi.WSGIApplication([
        (r"/", MainHandler),
    ])
    wsgiref.handlers.CGIHandler().run(application)
</code></pre>
    <p>请查看 demo 中的 <code>appengine</code> 范例，它是一个基于 Tornado 的完整的
      AppEngine 应用。</p>
    <h2 id="_15">注意事项和社区支持</h2>
    <p>因为 FriendFeed 以及其他 Tornado 的主要用户在使用时都是基于 <a href="#running-tornado-in-production">nginx</a>或者 Apache 代理之后的。所以现在
      Tornado 的 HTTP 服务部分并不完整，它无法处理多行的 header 信息，同时对于一
      些非标准的输入也无能为力。</p>
    <p>你可以在 <a href="http://groups.google.com/group/python-tornado" rel="nofollow">Tornado 开发者邮件列表</a> 中讨论和提交 bug。</p>
  </div>
  <div id="footer">
    <div>Tornado 是 <a href="http://developers.facebook.com/opensource/" rel="nofollow">Facebook开源技术</a>之一，基于<a href="http://www.apache.org/licenses/LICENSE-2.0.html" rel="nofollow">Apache Licence, Version 2.0</a> 发布。</div>
    <div>本站及其所有文档以 <a href="http://creativecommons.org/licenses/by/3.0/" rel="nofollow">Creative Commons 3.0</a> 发布。</div>
    <div>该中文文档的大部分翻译工作由 <a href="http://zys-free.com/" rel="nofollow">邹业盛</a> 完成，后期的增修和编排由<a href="http://ducktypist.com/" rel="nofollow">gastlygem</a> 完成。
      译文版权归原作者和译者所有。<br>
      <a href="http://sebug.net/appdir/">漏洞目录</a><br>
      <a href="http://ssv.sebug.net/">@sebug</a></div>
  </div>
</div>
<script type="text/javascript" language="javascript">
(function(){var aa=encodeURIComponent,ba=Infinity,ca=setTimeout,da=isNaN,m=Math,ea=decodeURIComponent;function ha(a,b){return a.name=b}
var n="push",ia="test",ja="slice",p="replace",ka="load",la="floor",ma="charAt",na="value",q="indexOf",oa="match",pa="port",qa="createElement",ra="path",r="name",g="getTime",u="host",v="toString",w="length",x="prototype",sa="clientWidth",y="split",ta="stopPropagation",ua="scope",z="location",va="search",A="protocol",wa="clientHeight",xa="href",B="substring",ya="apply",za="navigator",C="join",D="toLowerCase",E;function Aa(a,b){switch(b){case 0:return""+a;case 1:return 1*a;case 2:return!!a;case 3:return 1E3*a}return a}function Ba(a){return"function"==typeof a}function Ca(a){return void 0!=a&&-1<(a.constructor+"")[q]("String")}function F(a,b){return void 0==a||"-"==a&&!b||""==a}function Da(a){if(!a||""==a)return"";for(;a&&-1<" \n\r\t"[q](a[ma](0));)a=a[B](1);for(;a&&-1<" \n\r\t"[q](a[ma](a[w]-1));)a=a[B](0,a[w]-1);return a}function Ea(){return m.round(2147483647*m.random())}function Fa(){}
function G(a,b){if(aa instanceof Function)return b?encodeURI(a):aa(a);H(68);return escape(a)}function I(a){a=a[y]("+")[C](" ");if(ea instanceof Function)try{return ea(a)}catch(b){H(17)}else H(68);return unescape(a)}var Ga=function(a,b,c,d){a.addEventListener?a.addEventListener(b,c,!!d):a.attachEvent&&a.attachEvent("on"+b,c)},Ha=function(a,b,c,d){a.removeEventListener?a.removeEventListener(b,c,!!d):a.detachEvent&&a.detachEvent("on"+b,c)};
function Ia(a,b){if(a){var c=J[qa]("script");c.type="text/javascript";c.async=!0;c.src=a;c.id=b;var d=J.getElementsByTagName("script")[0];d.parentNode.insertBefore(c,d);return c}}function K(a){return a&&0<a[w]?a[0]:""}function L(a){var b=a?a[w]:0;return 0<b?a[b-1]:""}var Ja=function(){this.prefix="ga.";this.R={}};Ja[x].set=function(a,b){this.R[this.prefix+a]=b};Ja[x].get=function(a){return this.R[this.prefix+a]};Ja[x].contains=function(a){return void 0!==this.get(a)};function Ka(a){0==a[q]("www.")&&(a=a[B](4));return a[D]()}function La(a,b){var c,d={url:a,protocol:"http",host:"",path:"",d:new Ja,anchor:""};if(!a)return d;c=a[q]("://");0<=c&&(d.protocol=a[B](0,c),a=a[B](c+3));c=a[va]("/|\\?|#");if(0<=c)d.host=a[B](0,c)[D](),a=a[B](c);else return d.host=a[D](),d;c=a[q]("#");0<=c&&(d.anchor=a[B](c+1),a=a[B](0,c));c=a[q]("?");0<=c&&(Na(d.d,a[B](c+1)),a=a[B](0,c));d.anchor&&b&&Na(d.d,d.anchor);a&&"/"==a[ma](0)&&(a=a[B](1));d.path=a;return d}
function Oa(a,b){function c(a){var b=(a.hostname||"")[y](":")[0][D](),c=(a[A]||"")[D](),c=1*a[pa]||("http:"==c?80:"https:"==c?443:"");a=a.pathname||"";0==a[q]("/")||(a="/"+a);return[b,""+c,a]}var d=b||J[qa]("a");d.href=J[z][xa];var e=(d[A]||"")[D](),f=c(d),Be=d[va]||"",k=e+"//"+f[0]+(f[1]?":"+f[1]:"");0==a[q]("//")?a=e+a:0==a[q]("/")?a=k+a:a&&0!=a[q]("?")?0>a[y]("/")[0][q](":")&&(a=k+f[2][B](0,f[2].lastIndexOf("/"))+"/"+a):a=k+f[2]+(a||Be);d.href=a;e=c(d);return{protocol:(d[A]||"")[D](),host:e[0],
port:e[1],path:e[2],Oa:d[va]||"",url:a||""}}function Na(a,b){function c(b,c){a.contains(b)||a.set(b,[]);a.get(b)[n](c)}for(var d=Da(b)[y]("&"),e=0;e<d[w];e++)if(d[e]){var f=d[e][q]("=");0>f?c(d[e],"1"):c(d[e][B](0,f),d[e][B](f+1))}}function Pa(a,b){if(F(a)||"["==a[ma](0)&&"]"==a[ma](a[w]-1))return"-";var c=J.domain;return a[q](c+(b&&"/"!=b?b:""))==(0==a[q]("http://")?7:0==a[q]("https://")?8:0)?"0":a};var Qa=0;function Ra(a,b,c){1<=Qa||1<=100*m.random()||(a=["utmt=error","utmerr="+a,"utmwv=5.4.5","utmn="+Ea(),"utmsp=1"],b&&a[n]("api="+b),c&&a[n]("msg="+G(c[B](0,100))),M.w&&a[n]("aip=1"),Sa(a[C]("&")),Qa++)};var Ta=0,Ua={};function N(a){return Va("x"+Ta++,a)}function Va(a,b){Ua[a]=!!b;return a}
var Wa=N(),Xa=Va("anonymizeIp"),Ya=N(),$a=N(),ab=N(),bb=N(),O=N(),P=N(),cb=N(),db=N(),eb=N(),fb=N(),gb=N(),hb=N(),ib=N(),jb=N(),kb=N(),lb=N(),nb=N(),ob=N(),pb=N(),qb=N(),rb=N(),sb=N(),tb=N(),ub=N(),vb=N(),wb=N(),xb=N(),yb=N(),zb=N(),Ab=N(),Bb=N(),Cb=N(),Db=N(),Eb=N(),Fb=N(!0),Gb=Va("currencyCode"),Hb=Va("page"),Ib=Va("title"),Jb=N(),Kb=N(),Lb=N(),Mb=N(),Nb=N(),Ob=N(),Pb=N(),Qb=N(),Rb=N(),Q=N(!0),Sb=N(!0),Tb=N(!0),Ub=N(!0),Vb=N(!0),Wb=N(!0),Zb=N(!0),$b=N(!0),ac=N(!0),bc=N(!0),cc=N(!0),R=N(!0),dc=N(!0),
ec=N(!0),fc=N(!0),gc=N(!0),hc=N(!0),ic=N(!0),jc=N(!0),S=N(!0),kc=N(!0),lc=N(!0),mc=N(!0),nc=N(!0),oc=N(!0),pc=N(!0),qc=N(!0),rc=Va("campaignParams"),sc=N(),tc=Va("hitCallback"),uc=N();N();var vc=N(),wc=N(),xc=N(),yc=N(),zc=N(),Ac=N(),Bc=N(),Cc=N(),Dc=N(),Ec=N(),Fc=N(),Gc=N(),Hc=N(),Ic=N();N();var Mc=N(),Nc=N(),Oc=N(),Oe=Va("uaName"),Pe=Va("uaDomain"),Qe=Va("uaPath");var Re=function(){function a(a,c,d){T($[x],a,c,d)}a("_createTracker",$[x].r,55);a("_getTracker",$[x].oa,0);a("_getTrackerByName",$[x].u,51);a("_getTrackers",$[x].pa,130);a("_anonymizeIp",$[x].aa,16);a("_forceSSL",$[x].la,125);a("_getPlugin",Pc,120)},Se=function(){function a(a,c,d){T(U[x],a,c,d)}Qc("_getName",$a,58);Qc("_getAccount",Wa,64);Qc("_visitCode",Q,54);Qc("_getClientInfo",ib,53,1);Qc("_getDetectTitle",lb,56,1);Qc("_getDetectFlash",jb,65,1);Qc("_getLocalGifPath",wb,57);Qc("_getServiceMode",
xb,59);V("_setClientInfo",ib,66,2);V("_setAccount",Wa,3);V("_setNamespace",Ya,48);V("_setAllowLinker",fb,11,2);V("_setDetectFlash",jb,61,2);V("_setDetectTitle",lb,62,2);V("_setLocalGifPath",wb,46,0);V("_setLocalServerMode",xb,92,void 0,0);V("_setRemoteServerMode",xb,63,void 0,1);V("_setLocalRemoteServerMode",xb,47,void 0,2);V("_setSampleRate",vb,45,1);V("_setCampaignTrack",kb,36,2);V("_setAllowAnchor",gb,7,2);V("_setCampNameKey",ob,41);V("_setCampContentKey",tb,38);V("_setCampIdKey",nb,39);V("_setCampMediumKey",
rb,40);V("_setCampNOKey",ub,42);V("_setCampSourceKey",qb,43);V("_setCampTermKey",sb,44);V("_setCampCIdKey",pb,37);V("_setCookiePath",P,9,0);V("_setMaxCustomVariables",yb,0,1);V("_setVisitorCookieTimeout",cb,28,1);V("_setSessionCookieTimeout",db,26,1);V("_setCampaignCookieTimeout",eb,29,1);V("_setReferrerOverride",Jb,49);V("_setSiteSpeedSampleRate",Dc,132);a("_trackPageview",U[x].Fa,1);a("_trackEvent",U[x].F,4);a("_trackPageLoadTime",U[x].Ea,100);a("_trackSocial",U[x].Ga,104);a("_trackTrans",U[x].Ia,
18);a("_sendXEvent",U[x].t,78);a("_createEventTracker",U[x].ia,74);a("_getVersion",U[x].qa,60);a("_setDomainName",U[x].B,6);a("_setAllowHash",U[x].va,8);a("_getLinkerUrl",U[x].na,52);a("_link",U[x].link,101);a("_linkByPost",U[x].ua,102);a("_setTrans",U[x].za,20);a("_addTrans",U[x].$,21);a("_addItem",U[x].Y,19);a("_clearTrans",U[x].ea,105);a("_setTransactionDelim",U[x].Aa,82);a("_setCustomVar",U[x].wa,10);a("_deleteCustomVar",U[x].ka,35);a("_getVisitorCustomVar",U[x].ra,50);a("_setXKey",U[x].Ca,83);
a("_setXValue",U[x].Da,84);a("_getXKey",U[x].sa,76);a("_getXValue",U[x].ta,77);a("_clearXKey",U[x].fa,72);a("_clearXValue",U[x].ga,73);a("_createXObj",U[x].ja,75);a("_addIgnoredOrganic",U[x].W,15);a("_clearIgnoredOrganic",U[x].ba,97);a("_addIgnoredRef",U[x].X,31);a("_clearIgnoredRef",U[x].ca,32);a("_addOrganic",U[x].Z,14);a("_clearOrganic",U[x].da,70);a("_cookiePathCopy",U[x].ha,30);a("_get",U[x].ma,106);a("_set",U[x].xa,107);a("_addEventListener",U[x].addEventListener,108);a("_removeEventListener",
U[x].removeEventListener,109);a("_addDevId",U[x].V);a("_getPlugin",Pc,122);a("_setPageGroup",U[x].ya,126);a("_trackTiming",U[x].Ha,124);a("_initData",U[x].v,2);a("_setVar",U[x].Ba,22);V("_setSessionTimeout",db,27,3);V("_setCookieTimeout",eb,25,3);V("_setCookiePersistence",cb,24,1);a("_setAutoTrackOutbound",Fa,79);a("_setTrackOutboundSubdomains",Fa,81);a("_setHrefExamineLimit",Fa,80)};function Pc(a){var b=this.plugins_;if(b)return b.get(a)}
var T=function(a,b,c,d){a[b]=function(){try{return void 0!=d&&H(d),c[ya](this,arguments)}catch(a){throw Ra("exc",b,a&&a[r]),a;}}},Qc=function(a,b,c,d){U[x][a]=function(){try{return H(c),Aa(this.a.get(b),d)}catch(e){throw Ra("exc",a,e&&e[r]),e;}}},V=function(a,b,c,d,e){U[x][a]=function(f){try{H(c),void 0==e?this.a.set(b,Aa(f,d)):this.a.set(b,e)}catch(Be){throw Ra("exc",a,Be&&Be[r]),Be;}}},Te=function(a,b){return{type:b,target:a,stopPropagation:function(){throw"aborted";}}};var Rc=RegExp(/(^|\.)doubleclick\.net$/i),Sc=function(a,b){return Rc[ia](J[z].hostname)?!0:"/"!==b?!1:0!=a[q]("www.google.")&&0!=a[q](".google.")&&0!=a[q]("google.")||-1<a[q]("google.org")?!1:!0},Tc=function(a){var b=a.get(bb),c=a.c(P,"/");Sc(b,c)&&a[ta]()};var Zc=function(){var a={},b={},c=new Uc;this.g=function(a,b){c.add(a,b)};var d=new Uc;this.e=function(a,b){d.add(a,b)};var e=!1,f=!1,Be=!0;this.T=function(){e=!0};this.j=function(a){this[ka]();this.set(sc,a,!0);a=new Vc(this);e=!1;d.execute(this);e=!0;b={};this.n();a.Ja()};this.load=function(){e&&(e=!1,this.Ka(),Wc(this),f||(f=!0,c.execute(this),Xc(this),Wc(this)),e=!0)};this.n=function(){if(e)if(f)e=!1,Xc(this),e=!0;else this[ka]()};this.get=function(c){Ua[c]&&this[ka]();return void 0!==b[c]?b[c]:
a[c]};this.set=function(c,d,e){Ua[c]&&this[ka]();e?b[c]=d:a[c]=d;Ua[c]&&this.n()};this.Za=function(b){a[b]=this.b(b,0)+1};this.b=function(a,b){var c=this.get(a);return void 0==c||""===c?b:1*c};this.c=function(a,b){var c=this.get(a);return void 0==c?b:c+""};this.Ka=function(){if(Be){var b=this.c(bb,""),c=this.c(P,"/");Sc(b,c)||(a[O]=a[hb]&&""!=b?Yc(b):1,Be=!1)}}};Zc[x].stopPropagation=function(){throw"aborted";};
var Vc=function(a){var b=this;this.q=0;var c=a.get(tc);this.Ua=function(){0<b.q&&c&&(b.q--,b.q||c())};this.Ja=function(){!b.q&&c&&ca(c,10)};a.set(uc,b,!0)};function $c(a,b){b=b||[];for(var c=0;c<b[w];c++){var d=b[c];if(""+a==d||0==d[q](a+"."))return d}return"-"}
var bd=function(a,b,c){c=c?"":a.c(O,"1");b=b[y](".");if(6!==b[w]||ad(b[0],c))return!1;c=1*b[1];var d=1*b[2],e=1*b[3],f=1*b[4];b=1*b[5];if(!(0<=c&&0<d&&0<e&&0<f&&0<=b))return!1;a.set(Q,c);a.set(Vb,d);a.set(Wb,e);a.set(Zb,f);a.set($b,b);return!0},cd=function(a){var b=a.get(Q),c=a.get(Vb),d=a.get(Wb),e=a.get(Zb),f=a.b($b,1);return[a.b(O,1),void 0!=b?b:"-",c||"-",d||"-",e||"-",f][C](".")},dd=function(a){return[a.b(O,1),a.b(cc,0),a.b(R,1),a.b(dc,0)][C](".")},ed=function(a,b,c){c=c?"":a.c(O,"1");var d=
b[y](".");if(4!==d[w]||ad(d[0],c))d=null;a.set(cc,d?1*d[1]:0);a.set(R,d?1*d[2]:10);a.set(dc,d?1*d[3]:a.get(ab));return null!=d||!ad(b,c)},fd=function(a,b){var c=G(a.c(Tb,"")),d=[],e=a.get(Fb);if(!b&&e){for(var f=0;f<e[w];f++){var Be=e[f];Be&&1==Be[ua]&&d[n](f+"="+G(Be[r])+"="+G(Be[na])+"=1")}0<d[w]&&(c+="|"+d[C]("^"))}return c?a.b(O,1)+"."+c:null},gd=function(a,b,c){c=c?"":a.c(O,"1");b=b[y](".");if(2>b[w]||ad(b[0],c))return!1;b=b[ja](1)[C](".")[y]("|");0<b[w]&&a.set(Tb,I(b[0]));if(1>=b[w])return!0;
b=b[1][y](-1==b[1][q](",")?"^":",");for(c=0;c<b[w];c++){var d=b[c][y]("=");if(4==d[w]){var e={};ha(e,I(d[1]));e.value=I(d[2]);e.scope=1;a.get(Fb)[d[0]]=e}}return!0},hd=function(a,b){var c=Ue(a,b);return c?[a.b(O,1),a.b(ec,0),a.b(fc,1),a.b(gc,1),c][C]("."):""},Ue=function(a){function b(b,e){if(!F(a.get(b))){var f=a.c(b,""),f=f[y](" ")[C]("%20"),f=f[y]("+")[C]("%20");c[n](e+"="+f)}}var c=[];b(ic,"utmcid");b(nc,"utmcsr");b(S,"utmgclid");b(kc,"utmgclsrc");b(lc,"utmdclid");b(mc,"utmdsid");b(jc,"utmccn");
b(oc,"utmcmd");b(pc,"utmctr");b(qc,"utmcct");return c[C]("|")},id=function(a,b,c){c=c?"":a.c(O,"1");b=b[y](".");if(5>b[w]||ad(b[0],c))return a.set(ec,void 0),a.set(fc,void 0),a.set(gc,void 0),a.set(ic,void 0),a.set(jc,void 0),a.set(nc,void 0),a.set(oc,void 0),a.set(pc,void 0),a.set(qc,void 0),a.set(S,void 0),a.set(kc,void 0),a.set(lc,void 0),a.set(mc,void 0),!1;a.set(ec,1*b[1]);a.set(fc,1*b[2]);a.set(gc,1*b[3]);Ve(a,b[ja](4)[C]("."));return!0},Ve=function(a,b){function c(a){return(a=b[oa](a+"=(.*?)(?:\\|utm|$)"))&&
2==a[w]?a[1]:void 0}function d(b,c){c?(c=e?I(c):c[y]("%20")[C](" "),a.set(b,c)):a.set(b,void 0)}-1==b[q]("=")&&(b=I(b));var e="2"==c("utmcvr");d(ic,c("utmcid"));d(jc,c("utmccn"));d(nc,c("utmcsr"));d(oc,c("utmcmd"));d(pc,c("utmctr"));d(qc,c("utmcct"));d(S,c("utmgclid"));d(kc,c("utmgclsrc"));d(lc,c("utmdclid"));d(mc,c("utmdsid"))},ad=function(a,b){return b?a!=b:!/^\d+$/[ia](a)};var Uc=function(){this.filters=[]};Uc[x].add=function(a,b){this.filters[n]({name:a,s:b})};Uc[x].execute=function(a){try{for(var b=0;b<this.filters[w];b++)this.filters[b].s.call(W,a)}catch(c){}};function jd(a){100!=a.get(vb)&&a.get(Q)%1E4>=100*a.get(vb)&&a[ta]()}function kd(a){ld(a.get(Wa))&&a[ta]()}function md(a){"file:"==J[z][A]&&a[ta]()}function Ge(a){He()&&a[ta]()}function nd(a){a.get(Ib)||a.set(Ib,J.title,!0);a.get(Hb)||a.set(Hb,J[z].pathname+J[z][va],!0)};var od=new function(){var a=[];this.set=function(b){a[b]=!0};this.Xa=function(){for(var b=[],c=0;c<a[w];c++)a[c]&&(b[m[la](c/6)]=b[m[la](c/6)]^1<<c%6);for(c=0;c<b[w];c++)b[c]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"[ma](b[c]||0);return b[C]("")+"~"}};function H(a){od.set(a)};var W=window,J=document,ld=function(a){var b=W._gaUserPrefs;if(b&&b.ioo&&b.ioo()||a&&!0===W["ga-disable-"+a])return!0;try{var c=W.external;if(c&&c._gaUserPrefs&&"oo"==c._gaUserPrefs)return!0}catch(d){}return!1},He=function(){return W[za]&&"preview"==W[za].loadPurpose},We=function(a,b){ca(a,b)},pd=function(a){var b=[],c=J.cookie[y](";");a=RegExp("^\\s*"+a+"=\\s*(.*?)\\s*$");for(var d=0;d<c[w];d++){var e=c[d][oa](a);e&&b[n](e[1])}return b},X=function(a,b,c,d,e,f){e=ld(e)?!1:Sc(d,c)?!1:He()?!1:!0;if(e){if(b&&
0<=W[za].userAgent[q]("Firefox")){b=b[p](/\n|\r/g," ");e=0;for(var Be=b[w];e<Be;++e){var k=b.charCodeAt(e)&255;if(10==k||13==k)b=b[B](0,e)+"?"+b[B](e+1)}}b&&2E3<b[w]&&(b=b[B](0,2E3),H(69));a=a+"="+b+"; path="+c+"; ";f&&(a+="expires="+(new Date((new Date)[g]()+f)).toGMTString()+"; ");d&&(a+="domain="+d+";");J.cookie=a}};var qd,rd,sd=function(){if(!qd){var a={},b=W[za],c=W.screen;a.Q=c?c.width+"x"+c.height:"-";a.P=c?c.colorDepth+"-bit":"-";a.language=(b&&(b.language||b.browserLanguage)||"-")[D]();a.javaEnabled=b&&b.javaEnabled()?1:0;a.characterSet=J.characterSet||J.charset||"-";try{var d;var e=J.documentElement,f=J.body,Be=f&&f[sa]&&f[wa],b=[];e&&e[sa]&&e[wa]&&("CSS1Compat"===J.compatMode||!Be)?b=[e[sa],e[wa]]:Be&&(b=[f[sa],f[wa]]);d=0>=b[0]||0>=b[1]?"":b[C]("x");a.Wa=d}catch(k){H(135)}qd=a}},td=function(){sd();for(var a=
qd,b=W[za],a=b.appName+b.version+a.language+b.platform+b.userAgent+a.javaEnabled+a.Q+a.P+(J.cookie?J.cookie:"")+(J.referrer?J.referrer:""),b=a[w],c=W.history[w];0<c;)a+=c--^b++;return Yc(a)},ud=function(a){sd();var b=qd;a.set(Lb,b.Q);a.set(Mb,b.P);a.set(Pb,b.language);a.set(Qb,b.characterSet);a.set(Nb,b.javaEnabled);a.set(Rb,b.Wa);if(a.get(ib)&&a.get(jb)){if(!(b=rd)){var c,d,e;d="ShockwaveFlash";if((b=(b=W[za])?b.plugins:void 0)&&0<b[w])for(c=0;c<b[w]&&!e;c++)d=b[c],-1<d[r][q]("Shockwave Flash")&&
(e=d.description[y]("Shockwave Flash ")[1]);else{d=d+"."+d;try{c=new ActiveXObject(d+".7"),e=c.GetVariable("$version")}catch(f){}if(!e)try{c=new ActiveXObject(d+".6"),e="WIN 6,0,21,0",c.AllowScriptAccess="always",e=c.GetVariable("$version")}catch(Be){}if(!e)try{c=new ActiveXObject(d),e=c.GetVariable("$version")}catch(k){}e&&(e=e[y](" ")[1][y](","),e=e[0]+"."+e[1]+" r"+e[2])}b=e?e:"-"}rd=b;a.set(Ob,rd)}else a.set(Ob,"-")};var vd=function(a){if(Ba(a))this.s=a;else{var b=a[0],c=b.lastIndexOf(":"),d=b.lastIndexOf(".");this.h=this.i=this.l="";-1==c&&-1==d?this.h=b:-1==c&&-1!=d?(this.i=b[B](0,d),this.h=b[B](d+1)):-1!=c&&-1==d?(this.l=b[B](0,c),this.h=b[B](c+1)):c>d?(this.i=b[B](0,d),this.l=b[B](d+1,c),this.h=b[B](c+1)):(this.i=b[B](0,d),this.h=b[B](d+1));this.k=a[ja](1);this.Ma=!this.l&&"_require"==this.h;this.J=!this.i&&!this.l&&"_provide"==this.h}},Y=function(){T(Y[x],"push",Y[x][n],5);T(Y[x],"_getPlugin",Pc,121);T(Y[x],
"_createAsyncTracker",Y[x].Sa,33);T(Y[x],"_getAsyncTracker",Y[x].Ta,34);this.I=new Ja;this.p=[]};E=Y[x];E.Na=function(a,b,c){var d=this.I.get(a);if(!Ba(d))return!1;b.plugins_=b.plugins_||new Ja;b.plugins_.set(a,new d(b,c||{}));return!0};E.push=function(a){var b=Z.Va[ya](this,arguments),b=Z.p.concat(b);for(Z.p=[];0<b[w]&&!Z.O(b[0])&&!(b.shift(),0<Z.p[w]););Z.p=Z.p.concat(b);return 0};E.Va=function(a){for(var b=[],c=0;c<arguments[w];c++)try{var d=new vd(arguments[c]);d.J?this.O(d):b[n](d)}catch(e){}return b};
E.O=function(a){try{if(a.s)a.s[ya](W);else if(a.J)this.I.set(a.k[0],a.k[1]);else{var b="_gat"==a.i?M:"_gaq"==a.i?Z:M.u(a.i);if(a.Ma){if(!this.Na(a.k[0],b,a.k[2])){if(!a.Pa){var c=Oa(""+a.k[1]);var d=c[A],e=J[z][A];var f;if(f="https:"==d||d==e?!0:"http:"!=d?!1:"http:"==e){var Be;t:{var k=Oa(J[z][xa]);if(!(c.Oa||0<=c.url[q]("?")||0<=c[ra][q]("://")||c[u]==k[u]&&c[pa]==k[pa]))for(var s="http:"==c[A]?80:443,t=M.S,b=0;b<t[w];b++)if(c[u]==t[b][0]&&(c[pa]||s)==(t[b][1]||s)&&0==c[ra][q](t[b][2])){Be=!0;break t}Be=
!1}f=Be&&!ld()}f&&(a.Pa=Ia(c.url))}return!0}}else a.l&&(b=b.plugins_.get(a.l)),b[a.h][ya](b,a.k)}}catch(Za){}};E.Sa=function(a,b){return M.r(a,b||"")};E.Ta=function(a){return M.u(a)};var yd=function(){function a(a,b,c,d){void 0==f[a]&&(f[a]={});void 0==f[a][b]&&(f[a][b]=[]);f[a][b][c]=d}function b(a,b,c){if(void 0!=f[a]&&void 0!=f[a][b])return f[a][b][c]}function c(a,b){if(void 0!=f[a]&&void 0!=f[a][b]){f[a][b]=void 0;var c=!0,d;for(d=0;d<Be[w];d++)if(void 0!=f[a][Be[d]]){c=!1;break}c&&(f[a]=void 0)}}function d(a){var b="",c=!1,d,e;for(d=0;d<Be[w];d++)if(e=a[Be[d]],void 0!=e){c&&(b+=Be[d]);for(var c=[],f=void 0,ga=void 0,ga=0;ga<e[w];ga++)if(void 0!=e[ga]){f="";ga!=mb&&void 0==
e[ga-1]&&(f+=ga[v]()+Za);for(var Cd=e[ga],Jc="",Yb=void 0,Kc=void 0,Lc=void 0,Yb=0;Yb<Cd[w];Yb++)Kc=Cd[ma](Yb),Lc=Ma[Kc],Jc+=void 0!=Lc?Lc:Kc;f+=Jc;c[n](f)}b+=k+c[C](t)+s;c=!1}else c=!0;return b}var e=this,f=[],Be=["k","v"],k="(",s=")",t="*",Za="!",Ma={"'":"'0"};Ma[s]="'1";Ma[t]="'2";Ma[Za]="'3";var mb=1;e.Ra=function(a){return void 0!=f[a]};e.A=function(){for(var a="",b=0;b<f[w];b++)void 0!=f[b]&&(a+=b[v]()+d(f[b]));return a};e.Qa=function(a){if(void 0==a)return e.A();for(var b=a.A(),c=0;c<f[w];c++)void 0==
f[c]||a.Ra(c)||(b+=c[v]()+d(f[c]));return b};e.f=function(b,c,d){if(!wd(d))return!1;a(b,"k",c,d);return!0};e.o=function(b,c,d){if(!xd(d))return!1;a(b,"v",c,d[v]());return!0};e.getKey=function(a,c){return b(a,"k",c)};e.N=function(a,c){return b(a,"v",c)};e.L=function(a){c(a,"k")};e.M=function(a){c(a,"v")};T(e,"_setKey",e.f,89);T(e,"_setValue",e.o,90);T(e,"_getKey",e.getKey,87);T(e,"_getValue",e.N,88);T(e,"_clearKey",e.L,85);T(e,"_clearValue",e.M,86)};function wd(a){return"string"==typeof a}
function xd(a){return!("number"==typeof a||void 0!=Number&&a instanceof Number)||m.round(a)!=a||da(a)||a==ba?!1:!0};var zd=function(a){var b=W.gaGlobal;a&&!b&&(W.gaGlobal=b={});return b},Ad=function(){var a=zd(!0).hid;null==a&&(a=Ea(),zd(!0).hid=a);return a},Dd=function(a){a.set(Kb,Ad());var b=zd();if(b&&b.dh==a.get(O)){var c=b.sid;c&&(a.get(ac)?H(112):H(132),a.set(Zb,c),a.get(Sb)&&a.set(Wb,c));b=b.vid;a.get(Sb)&&b&&(b=b[y]("."),a.set(Q,1*b[0]),a.set(Vb,1*b[1]))}};var Ed,Fd=function(a,b,c,d){var e=a.c(bb,""),f=a.c(P,"/");d=void 0!=d?d:a.b(cb,0);a=a.c(Wa,"");X(b,c,f,e,a,d)},Xc=function(a){var b=a.c(bb,"");a.b(O,1);var c=a.c(P,"/"),d=a.c(Wa,"");X("__utma",cd(a),c,b,d,a.get(cb));X("__utmb",dd(a),c,b,d,a.get(db));X("__utmc",""+a.b(O,1),c,b,d);var e=hd(a,!0);e?X("__utmz",e,c,b,d,a.get(eb)):X("__utmz","",c,b,"",-1);(e=fd(a,!1))?X("__utmv",e,c,b,d,a.get(cb)):X("__utmv","",c,b,"",-1)},Wc=function(a){var b=a.b(O,1);if(!bd(a,$c(b,pd("__utma"))))return a.set(Ub,!0),!1;
var c=!ed(a,$c(b,pd("__utmb")));a.set(bc,c);id(a,$c(b,pd("__utmz")));gd(a,$c(b,pd("__utmv")));Ed=!c;return!0},Gd=function(a){Ed||0<pd("__utmb")[w]||(X("__utmd","1",a.c(P,"/"),a.c(bb,""),a.c(Wa,""),1E4),0==pd("__utmd")[w]&&a[ta]())};var h=0,Jd=function(a){void 0==a.get(Q)?Hd(a):a.get(Ub)&&!a.get(Mc)?Hd(a):a.get(bc)&&(Id(a),h++,1<h&&H(137))},Kd=function(a){a.get(hc)&&!a.get(ac)&&(Id(a),a.set(fc,a.get($b)))},Hd=function(a){var b=a.get(ab);a.set(Sb,!0);a.set(Q,Ea()^td(a)&2147483647);a.set(Tb,"");a.set(Vb,b);a.set(Wb,b);a.set(Zb,b);a.set($b,1);a.set(ac,!0);a.set(cc,0);a.set(R,10);a.set(dc,b);a.set(Fb,[]);a.set(Ub,!1);a.set(bc,!1)},Id=function(a){a.set(Wb,a.get(Zb));a.set(Zb,a.get(ab));a.Za($b);a.set(ac,!0);a.set(cc,0);a.set(R,10);
a.set(dc,a.get(ab));a.set(bc,!1)};var Ld="daum:q eniro:search_word naver:query pchome:q images.google:q google:q yahoo:p yahoo:q msn:q bing:q aol:query aol:q lycos:q lycos:query ask:q netscape:query cnn:query about:terms mamma:q voila:rdata virgilio:qs live:q baidu:wd alice:qs yandex:text najdi:q seznam:q rakuten:qt biglobe:q goo.ne:MT wp:szukaj onet:qt yam:k kvasir:q ozu:q terra:query rambler:query conduit:q babylon:q search-results:q avg:q comcast:q incredimail:q startsiden:q go.mail.ru:q search.centrum.cz:q 360.cn:q".split(" "),
Sd=function(a){if(a.get(kb)&&!a.get(Mc)){for(var b=!F(a.get(ic))||!F(a.get(nc))||!F(a.get(S))||!F(a.get(lc)),c={},d=0;d<Md[w];d++){var e=Md[d];c[e]=a.get(e)}(d=a.get(rc))?(H(149),e=new Ja,Na(e,d),d=e):d=La(J[z][xa],a.get(gb)).d;if("1"!=L(d.get(a.get(ub)))||!b)if(d=Xe(a,d)||Qd(a),d||b||!a.get(ac)||(Pd(a,void 0,"(direct)",void 0,void 0,void 0,"(direct)","(none)",void 0,void 0),d=!0),d&&(a.set(hc,Rd(a,c)),b="(direct)"==a.get(nc)&&"(direct)"==a.get(jc)&&"(none)"==a.get(oc),a.get(hc)||a.get(ac)&&!b))a.set(ec,
a.get(ab)),a.set(fc,a.get($b)),a.Za(gc)}},Xe=function(a,b){function c(c,d){d=d||"-";var e=L(b.get(a.get(c)));return e&&"-"!=e?I(e):d}var d=L(b.get(a.get(nb)))||"-",e=L(b.get(a.get(qb)))||"-",f=L(b.get(a.get(pb)))||"-",Be=L(b.get("gclsrc"))||"-",k=L(b.get("dclid"))||"-",s=c(ob,"(not set)"),t=c(rb,"(not set)"),Za=c(sb),Ma=c(tb);if(F(d)&&F(f)&&F(k)&&F(e))return!1;var mb=!F(f)&&!F(Be),mb=F(e)&&(!F(k)||mb),Xb=F(Za);if(mb||Xb){var Bd=Nd(a),Bd=La(Bd,!0);(Bd=Od(a,Bd))&&!F(Bd[1]&&!Bd[2])&&(mb&&(e=Bd[0]),Xb&&
(Za=Bd[1]))}Pd(a,d,e,f,Be,k,s,t,Za,Ma);return!0},Qd=function(a){var b=Nd(a),c=La(b,!0);if(!(void 0!=b&&null!=b&&""!=b&&"0"!=b&&"-"!=b&&0<=b[q]("://"))||c&&-1<c[u][q]("google")&&c.d.contains("q")&&"cse"==c[ra])return!1;if((b=Od(a,c))&&!b[2])return Pd(a,void 0,b[0],void 0,void 0,void 0,"(organic)","organic",b[1],void 0),!0;if(b||!a.get(ac))return!1;t:{for(var b=a.get(Bb),d=Ka(c[u]),e=0;e<b[w];++e)if(-1<d[q](b[e])){a=!1;break t}Pd(a,void 0,d,void 0,void 0,void 0,"(referral)","referral",void 0,"/"+c[ra]);
a=!0}return a},Od=function(a,b){for(var c=a.get(zb),d=0;d<c[w];++d){var e=c[d][y](":");if(-1<b[u][q](e[0][D]())){var f=b.d.get(e[1]);if(f&&(f=K(f),!f&&-1<b[u][q]("google.")&&(f="(not provided)"),!e[3]||-1<b.url[q](e[3]))){t:{for(var c=f,d=a.get(Ab),c=I(c)[D](),Be=0;Be<d[w];++Be)if(c==d[Be]){c=!0;break t}c=!1}return[e[2]||e[0],f,c]}}}return null},Pd=function(a,b,c,d,e,f,Be,k,s,t){a.set(ic,b);a.set(nc,c);a.set(S,d);a.set(kc,e);a.set(lc,f);a.set(jc,Be);a.set(oc,k);a.set(pc,s);a.set(qc,t)},Md=[jc,ic,
S,lc,nc,oc,pc,qc],Rd=function(a,b){function c(a){a=(""+a)[y]("+")[C]("%20");return a=a[y](" ")[C]("%20")}function d(c){var d=""+(a.get(c)||"");c=""+(b[c]||"");return 0<d[w]&&d==c}if(d(S)||d(lc))return H(131),!1;for(var e=0;e<Md[w];e++){var f=Md[e],Be=b[f]||"-",f=a.get(f)||"-";if(c(Be)!=c(f))return!0}return!1},Td=RegExp(/^https?:\/\/(www\.)?google(\.com?)?(\.[a-z]{2}t?)?\/?$/i),Nd=function(a){a=Pa(a.get(Jb),a.get(P));try{if(Td[ia](a))return H(136),a+"?q="}catch(b){H(145)}return a};var Ud,Vd,Wd=function(a){Ud=a.c(S,"");Vd=a.c(kc,"")},Xd=function(a){var b=a.c(S,""),c=a.c(kc,"");b!=Ud&&(-1<c[q]("ds")?a.set(mc,void 0):!F(Ud)&&-1<Vd[q]("ds")&&a.set(mc,Ud))};var Zd=function(a){Yd(a,J[z][xa])?(a.set(Mc,!0),H(12)):a.set(Mc,!1)},Yd=function(a,b){if(!a.get(fb))return!1;var c=La(b,a.get(gb)),d=K(c.d.get("__utma")),e=K(c.d.get("__utmb")),f=K(c.d.get("__utmc")),Be=K(c.d.get("__utmx")),k=K(c.d.get("__utmz")),s=K(c.d.get("__utmv")),c=K(c.d.get("__utmk"));if(Yc(""+d+e+f+Be+k+s)!=c){d=I(d);e=I(e);f=I(f);Be=I(Be);f=$d(d+e+f+Be,k,s,c);if(!f)return!1;k=f[0];s=f[1]}if(!bd(a,d,!0))return!1;ed(a,e,!0);id(a,k,!0);gd(a,s,!0);ae(a,Be,!0);return!0},ce=function(a,b,c){var d;
d=cd(a)||"-";var e=dd(a)||"-",f=""+a.b(O,1)||"-",Be=be(a)||"-",k=hd(a,!1)||"-";a=fd(a,!1)||"-";var s=Yc(""+d+e+f+Be+k+a),t=[];t[n]("__utma="+d);t[n]("__utmb="+e);t[n]("__utmc="+f);t[n]("__utmx="+Be);t[n]("__utmz="+k);t[n]("__utmv="+a);t[n]("__utmk="+s);d=t[C]("&");if(!d)return b;e=b[q]("#");if(c)return 0>e?b+"#"+d:b+"&"+d;c="";f=b[q]("?");0<e&&(c=b[B](e),b=b[B](0,e));return 0>f?b+"?"+d+c:b+"&"+d+c},$d=function(a,b,c,d){for(var e=0;3>e;e++){for(var f=0;3>f;f++){if(d==Yc(a+b+c))return H(127),[b,c];
var Be=b[p](/ /g,"%20"),k=c[p](/ /g,"%20");if(d==Yc(a+Be+k))return H(128),[Be,k];Be=Be[p](/\+/g,"%20");k=k[p](/\+/g,"%20");if(d==Yc(a+Be+k))return H(129),[Be,k];try{var s=b[oa]("utmctr=(.*?)(?:\\|utm|$)");if(s&&2==s[w]&&(Be=b[p](s[1],G(I(s[1]))),d==Yc(a+Be+c)))return H(139),[Be,c]}catch(t){}b=I(b)}c=I(c)}};var de="|",fe=function(a,b,c,d,e,f,Be,k,s){var t=ee(a,b);t||(t={},a.get(Cb)[n](t));t.id_=b;t.affiliation_=c;t.total_=d;t.tax_=e;t.shipping_=f;t.city_=Be;t.state_=k;t.country_=s;t.items_=t.items_||[];return t},ge=function(a,b,c,d,e,f,Be){a=ee(a,b)||fe(a,b,"",0,0,0,"","","");var k;t:{if(a&&a.items_){k=a.items_;for(var s=0;s<k[w];s++)if(k[s].sku_==c){k=k[s];break t}}k=null}s=k||{};s.transId_=b;s.sku_=c;s.name_=d;s.category_=e;s.price_=f;s.quantity_=Be;k||a.items_[n](s);return s},ee=function(a,b){for(var c=
a.get(Cb),d=0;d<c[w];d++)if(c[d].id_==b)return c[d];return null};var he,ie=function(a){if(!he){var b;b=J[z].hash;var c=W[r],d=/^#?gaso=([^&]*)/;if(c=(b=(b=b&&b[oa](d)||c&&c[oa](d))?b[1]:K(pd("GASO")))&&b[oa](/^(?:!([-0-9a-z.]{1,40})!)?([-.\w]{10,1200})$/i))Fd(a,"GASO",""+b,0),M._gasoDomain=a.get(bb),M._gasoCPath=a.get(P),a=c[1],Ia("https://www.google.com/analytics/web/inpage/pub/inpage.js?"+(a?"prefix="+a+"&":"")+Ea(),"_gasojs");he=!0}};var ae=function(a,b,c){c&&(b=I(b));c=a.b(O,1);b=b[y](".");2>b[w]||!/^\d+$/[ia](b[0])||(b[0]=""+c,Fd(a,"__utmx",b[C]("."),void 0))},be=function(a,b){var c=$c(a.get(O),pd("__utmx"));"-"==c&&(c="");return b?G(c):c},Ye=function(a){try{var b=La(J[z][xa],!1),c=ea(L(b.d.get("utm_referrer")))||"";c&&a.set(Jb,c);var d=ea(K(b.d.get("utm_expid")))||"";d&&(d=d[y](".")[0],a.set(Oc,""+d))}catch(e){H(146)}},l=function(a){var b=W.gaData&&W.gaData.expId;b&&a.set(Oc,""+b)};var ke=function(a,b){var c=m.min(a.b(Dc,0),100);if(a.b(Q,0)%100>=c)return!1;c=Ze()||$e();if(void 0==c)return!1;var d=c[0];if(void 0==d||d==ba||da(d))return!1;0<d?af(c)?b(je(c)):b(je(c[ja](0,1))):Ga(W,"load",function(){ke(a,b)},!1);return!0},me=function(a,b,c,d){var e=new yd;e.f(14,90,b[B](0,500));e.f(14,91,a[B](0,150));e.f(14,92,""+le(c));void 0!=d&&e.f(14,93,d[B](0,500));e.o(14,90,c);return e},af=function(a){for(var b=1;b<a[w];b++)if(da(a[b])||a[b]==ba||0>a[b])return!1;return!0},le=function(a){return da(a)||
0>a?0:5E3>a?10*m[la](a/10):5E4>a?100*m[la](a/100):41E5>a?1E3*m[la](a/1E3):41E5},je=function(a){for(var b=new yd,c=0;c<a[w];c++)b.f(14,c+1,""+le(a[c])),b.o(14,c+1,a[c]);return b},Ze=function(){var a=W.performance||W.webkitPerformance;if(a=a&&a.timing){var b=a.navigationStart;if(0==b)H(133);else return[a.loadEventStart-b,a.domainLookupEnd-a.domainLookupStart,a.connectEnd-a.connectStart,a.responseStart-a.requestStart,a.responseEnd-a.responseStart,a.fetchStart-b,a.domInteractive-b,a.domContentLoadedEventStart-
b]}},$e=function(){if(W.top==W){var a=W.external,b=a&&a.onloadT;a&&!a.isValidLoadTime&&(b=void 0);2147483648<b&&(b=void 0);0<b&&a.setPageReadyTime();return void 0==b?void 0:[b]}};var cf=function(a){if(a.get(Sb))try{var b;t:{var c=pd(a.get(Oe)||"_ga");if(c&&!(1>c[w])){for(var d=[],e=0;e<c[w];e++){var f;var Be=c[e][y]("."),k=Be.shift();if(("GA1"==k||"1"==k)&&1<Be[w]){var s=Be.shift()[y]("-");1==s[w]&&(s[1]="1");s[0]*=1;s[1]*=1;f={Ya:s,$a:Be[C](".")}}else f=void 0;f&&d[n](f)}if(1==d[w]){b=d[0].$a;break t}if(0!=d[w]){var t=a.get(Pe)||a.get(bb),d=bf(d,(0==t[q](".")?t.substr(1):t)[y](".")[w],0);if(1==d[w]){b=d[0].$a;break t}var Za=a.get(Qe)||a.get(P);(c=Za)?(1<c[w]&&"/"==c[ma](c[w]-
1)&&(c=c.substr(0,c[w]-1)),0!=c[q]("/")&&(c="/"+c),Za=c):Za="/";d=bf(d,"/"==Za?1:Za[y]("/")[w],1);b=d[0].$a;break t}}b=void 0}if(b){var Ma=(""+b)[y](".");2==Ma[w]&&/[0-9.]/[ia](Ma)&&(H(114),a.set(Q,Ma[0]),a.set(Vb,Ma[1]),a.set(Sb,!1))}}catch(mb){H(115)}},bf=function(a,b,c){for(var d=[],e=[],f=128,Be=0;Be<a[w];Be++){var k=a[Be];if(k.Ya[c]==b)d[n](k);else if(k.Ya[c]==f)e[n](k);else k.Ya[c]<f&&(e=[k],f=k.Ya[c])}return 0<d[w]?d:e};var U=function(a,b,c){function d(a){return function(b){if((b=b.get(Nc)[a])&&b[w])for(var c=Te(e,a),d=0;d<b[w];d++)b[d].call(e,c)}}var e=this;this.a=new Zc;this.get=function(a){return this.a.get(a)};this.set=function(a,b,c){this.a.set(a,b,c)};this.set(Wa,b||"UA-XXXXX-X");this.set($a,a||"");this.set(Ya,c||"");this.set(ab,m.round((new Date)[g]()/1E3));this.set(P,"/");this.set(cb,63072E6);this.set(eb,15768E6);this.set(db,18E5);this.set(fb,!1);this.set(yb,50);this.set(gb,!1);this.set(hb,!0);this.set(ib,
!0);this.set(jb,!0);this.set(kb,!0);this.set(lb,!0);this.set(ob,"utm_campaign");this.set(nb,"utm_id");this.set(pb,"gclid");this.set(qb,"utm_source");this.set(rb,"utm_medium");this.set(sb,"utm_term");this.set(tb,"utm_content");this.set(ub,"utm_nooverride");this.set(vb,100);this.set(Dc,1);this.set(Ec,!1);this.set(wb,"/__utm.gif");this.set(xb,1);this.set(Cb,[]);this.set(Fb,[]);this.set(zb,Ld[ja](0));this.set(Ab,[]);this.set(Bb,[]);this.B("auto");this.set(Jb,J.referrer);Ye(this.a);this.set(Nc,{hit:[],
load:[]});this.a.g("0",Zd);this.a.g("1",Wd);this.a.g("2",Jd);this.a.g("3",cf);this.a.g("4",Sd);this.a.g("5",Xd);this.a.g("6",Kd);this.a.g("7",d("load"));this.a.g("8",ie);this.a.e("A",kd);this.a.e("B",md);this.a.e("C",Ge);this.a.e("D",Jd);this.a.e("E",jd);this.a.e("F",Tc);this.a.e("G",ne);this.a.e("H",Gd);this.a.e("I",nd);this.a.e("J",ud);this.a.e("K",Dd);this.a.e("L",l);this.a.e("M",d("hit"));this.a.e("N",oe);this.a.e("O",pe);0===this.get(ab)&&H(111);this.a.T();this.H=void 0};E=U[x];
E.m=function(){var a=this.get(Db);a||(a=new yd,this.set(Db,a));return a};E.La=function(a){for(var b in a){var c=a[b];a.hasOwnProperty(b)&&this.set(b,c,!0)}};E.K=function(a){if(this.get(Ec))return!1;var b=this,c=ke(this.a,function(c){b.set(Hb,a,!0);b.t(c)});this.set(Ec,c);return c};E.Fa=function(a){a&&Ca(a)?(H(13),this.set(Hb,a,!0)):"object"===typeof a&&null!==a&&this.La(a);this.H=a=this.get(Hb);this.a.j("page");this.K(a)};
E.F=function(a,b,c,d,e){if(""==a||!wd(a)||""==b||!wd(b)||void 0!=c&&!wd(c)||void 0!=d&&!xd(d))return!1;this.set(wc,a,!0);this.set(xc,b,!0);this.set(yc,c,!0);this.set(zc,d,!0);this.set(vc,!!e,!0);this.a.j("event");return!0};E.Ha=function(a,b,c,d,e){var f=this.a.b(Dc,0);1*e===e&&(f=e);if(this.a.b(Q,0)%100>=f)return!1;c=1*(""+c);if(""==a||!wd(a)||""==b||!wd(b)||!xd(c)||da(c)||0>c||0>f||100<f||void 0!=d&&(""==d||!wd(d)))return!1;this.t(me(a,b,c,d));return!0};
E.Ga=function(a,b,c,d){if(!a||!b)return!1;this.set(Ac,a,!0);this.set(Bc,b,!0);this.set(Cc,c||J[z][xa],!0);d&&this.set(Hb,d,!0);this.a.j("social");return!0};E.Ea=function(){this.set(Dc,10);this.K(this.H)};E.Ia=function(){this.a.j("trans")};E.t=function(a){this.set(Eb,a,!0);this.a.j("event")};E.ia=function(a){this.v();var b=this;return{_trackEvent:function(c,d,e){H(91);b.F(a,c,d,e)}}};E.ma=function(a){return this.get(a)};
E.xa=function(a,b){if(a)if(Ca(a))this.set(a,b);else if("object"==typeof a)for(var c in a)a.hasOwnProperty(c)&&this.set(c,a[c])};E.addEventListener=function(a,b){var c=this.get(Nc)[a];c&&c[n](b)};E.removeEventListener=function(a,b){for(var c=this.get(Nc)[a],d=0;c&&d<c[w];d++)if(c[d]==b){c.splice(d,1);break}};E.qa=function(){return"5.4.5"};E.B=function(a){this.get(hb);a="auto"==a?Ka(J.domain):a&&"-"!=a&&"none"!=a?a[D]():"";this.set(bb,a)};E.va=function(a){this.set(hb,!!a)};
E.na=function(a,b){return ce(this.a,a,b)};E.link=function(a,b){if(this.a.get(fb)&&a){var c=ce(this.a,a,b);J[z].href=c}};E.ua=function(a,b){this.a.get(fb)&&a&&a.action&&(a.action=ce(this.a,a.action,b))};
E.za=function(){this.v();var a=this.a,b=J.getElementById?J.getElementById("utmtrans"):J.utmform&&J.utmform.utmtrans?J.utmform.utmtrans:null;if(b&&b[na]){a.set(Cb,[]);for(var b=b[na][y]("UTM:"),c=0;c<b[w];c++){b[c]=Da(b[c]);for(var d=b[c][y](de),e=0;e<d[w];e++)d[e]=Da(d[e]);"T"==d[0]?fe(a,d[1],d[2],d[3],d[4],d[5],d[6],d[7],d[8]):"I"==d[0]&&ge(a,d[1],d[2],d[3],d[4],d[5],d[6])}}};E.$=function(a,b,c,d,e,f,Be,k){return fe(this.a,a,b,c,d,e,f,Be,k)};E.Y=function(a,b,c,d,e,f){return ge(this.a,a,b,c,d,e,f)};
E.Aa=function(a){de=a||"|"};E.ea=function(){this.set(Cb,[])};E.wa=function(a,b,c,d){var e=this.a;if(0>=a||a>e.get(yb))a=!1;else if(!b||!c||128<b[w]+c[w])a=!1;else{1!=d&&2!=d&&(d=3);var f={};ha(f,b);f.value=c;f.scope=d;e.get(Fb)[a]=f;a=!0}a&&this.a.n();return a};E.ka=function(a){this.a.get(Fb)[a]=void 0;this.a.n()};E.ra=function(a){return(a=this.a.get(Fb)[a])&&1==a[ua]?a[na]:void 0};E.Ca=function(a,b,c){this.m().f(a,b,c)};E.Da=function(a,b,c){this.m().o(a,b,c)};
E.sa=function(a,b){return this.m().getKey(a,b)};E.ta=function(a,b){return this.m().N(a,b)};E.fa=function(a){this.m().L(a)};E.ga=function(a){this.m().M(a)};E.ja=function(){return new yd};E.W=function(a){a&&this.get(Ab)[n](a[D]())};E.ba=function(){this.set(Ab,[])};E.X=function(a){a&&this.get(Bb)[n](a[D]())};E.ca=function(){this.set(Bb,[])};E.Z=function(a,b,c,d,e){if(a&&b){a=[a,b[D]()][C](":");if(d||e)a=[a,d,e][C](":");d=this.get(zb);d.splice(c?0:d[w],0,a)}};E.da=function(){this.set(zb,[])};
E.ha=function(a){this.a[ka]();var b=this.get(P),c=be(this.a);this.set(P,a);this.a.n();ae(this.a,c);this.set(P,b)};E.ya=function(a,b){if(0<a&&5>=a&&Ca(b)&&""!=b){var c=this.get(Fc)||[];c[a]=b;this.set(Fc,c)}};E.V=function(a){a=""+a;if(a[oa](/^[A-Za-z0-9]{1,5}$/)){var b=this.get(Ic)||[];b[n](a);this.set(Ic,b)}};E.v=function(){this.a[ka]()};E.Ba=function(a){a&&""!=a&&(this.set(Tb,a),this.a.j("var"))};var ne=function(a){"trans"!==a.get(sc)&&500<=a.b(cc,0)&&a[ta]();if("event"===a.get(sc)){var b=(new Date)[g](),c=a.b(dc,0),d=a.b(Zb,0),c=m[la](1*((b-(c!=d?c:1E3*c))/1E3));0<c&&(a.set(dc,b),a.set(R,m.min(10,a.b(R,0)+c)));0>=a.b(R,0)&&a[ta]()}},pe=function(a){"event"===a.get(sc)&&a.set(R,m.max(0,a.b(R,10)-1))};var qe=function(){var a=[];this.add=function(b,c,d){d&&(c=G(""+c));a[n](b+"="+c)};this.toString=function(){return a[C]("&")}},re=function(a,b){(b||2!=a.get(xb))&&a.Za(cc)},se=function(a,b){b.add("utmwv","5.4.5");b.add("utms",a.get(cc));b.add("utmn",Ea());var c=J[z].hostname;F(c)||b.add("utmhn",c,!0);c=a.get(vb);100!=c&&b.add("utmsp",c,!0)},te=function(a,b){b.add("utmht",(new Date)[g]());b.add("utmac",Da(a.get(Wa)));a.get(Oc)&&b.add("utmxkey",a.get(Oc),!0);a.get(vc)&&b.add("utmni",1);var c=a.get(Ic);
c&&0<c[w]&&b.add("utmdid",c[C]("."));ff(a,b);!1!==a.get(Xa)&&(a.get(Xa)||M.w)&&b.add("aip",1);1<M.ab()&&b.add("utmmt",1);b.add("utmu",od.Xa())},ue=function(a,b){for(var c=a.get(Fc)||[],d=[],e=1;e<c[w];e++)c[e]&&d[n](e+":"+G(c[e][p](/%/g,"%25")[p](/:/g,"%3A")[p](/,/g,"%2C")));d[w]&&b.add("utmpg",d[C](","))},ff=function(a,b){function c(a,b){b&&d[n](a+"="+b+";")}var d=[];c("__utma",cd(a));c("__utmz",hd(a,!1));c("__utmv",fd(a,!0));c("__utmx",be(a));b.add("utmcc",d[C]("+"),!0)},ve=function(a,b){a.get(ib)&&
(b.add("utmcs",a.get(Qb),!0),b.add("utmsr",a.get(Lb)),a.get(Rb)&&b.add("utmvp",a.get(Rb)),b.add("utmsc",a.get(Mb)),b.add("utmul",a.get(Pb)),b.add("utmje",a.get(Nb)),b.add("utmfl",a.get(Ob),!0))},we=function(a,b){a.get(lb)&&a.get(Ib)&&b.add("utmdt",a.get(Ib),!0);b.add("utmhid",a.get(Kb));b.add("utmr",Pa(a.get(Jb),a.get(P)),!0);b.add("utmp",G(a.get(Hb),!0),!0)},xe=function(a,b){for(var c=a.get(Db),d=a.get(Eb),e=a.get(Fb)||[],f=0;f<e[w];f++){var Be=e[f];Be&&(c||(c=new yd),c.f(8,f,Be[r]),c.f(9,f,Be[na]),
3!=Be[ua]&&c.f(11,f,""+Be[ua]))}F(a.get(wc))||F(a.get(xc),!0)||(c||(c=new yd),c.f(5,1,a.get(wc)),c.f(5,2,a.get(xc)),e=a.get(yc),void 0!=e&&c.f(5,3,e),e=a.get(zc),void 0!=e&&c.o(5,1,e));c?b.add("utme",c.Qa(d),!0):d&&b.add("utme",d.A(),!0)},ye=function(a,b,c){var d=new qe;re(a,c);se(a,d);d.add("utmt","tran");d.add("utmtid",b.id_,!0);d.add("utmtst",b.affiliation_,!0);d.add("utmtto",b.total_,!0);d.add("utmttx",b.tax_,!0);d.add("utmtsp",b.shipping_,!0);d.add("utmtci",b.city_,!0);d.add("utmtrg",b.state_,
!0);d.add("utmtco",b.country_,!0);xe(a,d);ve(a,d);we(a,d);(b=a.get(Gb))&&d.add("utmcu",b,!0);c||(ue(a,d),te(a,d));return d[v]()},ze=function(a,b,c){var d=new qe;re(a,c);se(a,d);d.add("utmt","item");d.add("utmtid",b.transId_,!0);d.add("utmipc",b.sku_,!0);d.add("utmipn",b.name_,!0);d.add("utmiva",b.category_,!0);d.add("utmipr",b.price_,!0);d.add("utmiqt",b.quantity_,!0);xe(a,d);ve(a,d);we(a,d);(b=a.get(Gb))&&d.add("utmcu",b,!0);c||(ue(a,d),te(a,d));return d[v]()},Ae=function(a,b){var c=a.get(sc);if("page"==
c)c=new qe,re(a,b),se(a,c),xe(a,c),ve(a,c),we(a,c),b||(ue(a,c),te(a,c)),c=[c[v]()];else if("event"==c)c=new qe,re(a,b),se(a,c),c.add("utmt","event"),xe(a,c),ve(a,c),we(a,c),b||(ue(a,c),te(a,c)),c=[c[v]()];else if("var"==c)c=new qe,re(a,b),se(a,c),c.add("utmt","var"),!b&&te(a,c),c=[c[v]()];else if("trans"==c)for(var c=[],d=a.get(Cb),e=0;e<d[w];++e){c[n](ye(a,d[e],b));for(var f=d[e].items_,Be=0;Be<f[w];++Be)c[n](ze(a,f[Be],b))}else"social"==c?b?c=[]:(c=new qe,re(a,b),se(a,c),c.add("utmt","social"),
c.add("utmsn",a.get(Ac),!0),c.add("utmsa",a.get(Bc),!0),c.add("utmsid",a.get(Cc),!0),xe(a,c),ve(a,c),we(a,c),ue(a,c),te(a,c),c=[c[v]()]):"feedback"==c?b?c=[]:(c=new qe,re(a,b),se(a,c),c.add("utmt","feedback"),c.add("utmfbid",a.get(Gc),!0),c.add("utmfbpr",a.get(Hc),!0),xe(a,c),ve(a,c),we(a,c),ue(a,c),te(a,c),c=[c[v]()]):c=[];return c},oe=function(a){var b,c=a.get(xb),d=a.get(uc),e=d&&d.Ua,f=0;if(0==c||2==c){var Be=a.get(wb)+"?";b=Ae(a,!0);for(var k=0,s=b[w];k<s;k++)Sa(b[k],e,Be,!0),f++}if(1==c||2==
c)for(b=Ae(a),k=0,s=b[w];k<s;k++)try{Sa(b[k],e),f++}catch(t){t&&Ra(t[r],void 0,t.message)}d&&(d.q=f)};var Ce=function(a){ha(this,"len");this.message=a+"-8192"},De=function(a){ha(this,"ff2post");this.message=a+"-2036"},Sa=function(a,b,c,d){b=b||Fa;if(d||2036>=a[w])gf(a,b,c);else if(8192>=a[w]){if(0<=W[za].userAgent[q]("Firefox")&&![].reduce)throw new De(a[w]);hf(a,b)||Ee(a,b)}else throw new Ce(a[w]);},gf=function(a,b,c){c=c||("https:"==J[z][A]||M.G?"https://ssl.google-analytics.com":"http://www.google-analytics.com")+"/__utm.gif?";var d=new Image(1,1);d.src=c+a;d.onload=function(){d.onload=null;d.onerror=
null;b()};d.onerror=function(){d.onload=null;d.onerror=null;b()}},hf=function(a,b){var c,d=("https:"==J[z][A]||M.G?"https://ssl.google-analytics.com":"http://www.google-analytics.com")+"/p/__utm.gif",e=W.XDomainRequest;if(e)c=new e,c.open("POST",d);else if(e=W.XMLHttpRequest)e=new e,"withCredentials"in e&&(c=e,c.open("POST",d,!0),c.setRequestHeader("Content-Type","text/plain"));if(c)return c.onreadystatechange=function(){4==c.readyState&&(b(),c=null)},c.send(a),!0},Ee=function(a,b){if(J.body){a=aa(a);
try{var c=J[qa]('<iframe name="'+a+'"></iframe>')}catch(d){c=J[qa]("iframe"),ha(c,a)}c.height="0";c.width="0";c.style.display="none";c.style.visibility="hidden";var e=J[z],e=("https:"==J[z][A]||M.G?"https://ssl.google-analytics.com":"http://www.google-analytics.com")+"/u/post_iframe.html#"+aa(e[A]+"//"+e[u]+"/favicon.ico"),f=function(){c.src="";c.parentNode&&c.parentNode.removeChild(c)};Ga(W,"beforeunload",f);var Be=!1,k=0,s=function(){if(!Be){try{if(9<k||c.contentWindow[z][u]==J[z][u]){Be=!0;f();
Ha(W,"beforeunload",f);b();return}}catch(a){}k++;ca(s,200)}};Ga(c,"load",s);J.body.appendChild(c);c.src=e}else We(function(){Ee(a,b)},100)};var $=function(){this.G=this.w=!1;this.C={};this.D=[];this.U=0;this.S=[["www.google-analytics.com","","/plugins/"]];this._gasoCPath=this._gasoDomain=void 0;Re();Se()};E=$[x];E.oa=function(a,b){return this.r(a,void 0,b)};E.r=function(a,b,c){b&&H(23);c&&H(67);void 0==b&&(b="~"+M.U++);a=new U(b,a,c);M.C[b]=a;M.D[n](a);return a};E.u=function(a){a=a||"";return M.C[a]||M.r(void 0,a)};E.pa=function(){return M.D[ja](0)};E.ab=function(){return M.D[w]};E.aa=function(){this.w=!0};E.la=function(){this.G=!0};var Fe=function(a){if("prerender"==J.webkitVisibilityState)return!1;a();return!0};var M=new $;var jf=W._gat;jf&&Ba(jf._getTracker)?M=jf:W._gat=M;var Z=new Y;(function(a){if(!Fe(a)){H(123);var b=!1,c=function(){!b&&Fe(a)&&(b=!0,Ha(J,"webkitvisibilitychange",c))};Ga(J,"webkitvisibilitychange",c)}})(function(){var a=W._gaq,b=!1;if(a&&Ba(a[n])&&(b="[object Array]"==Object[x][v].call(Object(a)),!b)){Z=a;return}W._gaq=Z;b&&Z[n][ya](Z,a)});function Yc(a){var b=1,c=0,d;if(a)for(b=0,d=a[w]-1;0<=d;d--)c=a.charCodeAt(d),b=(b<<6&268435455)+c+(c<<14),c=b&266338304,b=0!=c?b^c>>21:b;return b};})();
</script>
<script type="text/javascript" language="javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-374733-11']);
_gaq.push(['_setDomainName', '.sebug.net']);
_gaq.push(['_setAllowLinker', true]);
_gaq.push(['_setAllowHash', false]);
_gaq.push(['_trackPageview']);

(function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
</body>
</html>
